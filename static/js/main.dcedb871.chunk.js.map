{"version":3,"sources":["context/LoaderContext/LoaderContext.tsx","context/ModalContext/ModalContext.tsx","generated/graphql.tsx","pages/Login/Login.tsx","utils/betterUpdateQuery.ts","utils/createUrqlClient.ts","App/App.tsx","reportWebVitals.ts","index.tsx","components/Nav/Nav.tsx","components/Loader/Loader.tsx","components/Breadcrumb/Breadcrumb.tsx","components/List/List.tsx","components/Modal/Modal.tsx","components/ConfirmationModal/ConfirmationModal.tsx","components/Empty/Empty.tsx","components/PageLoader/PageLoader.tsx","hoc/Layout/Layout.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/Footer/Footer.tsx"],"names":["LoaderContext","createContext","LoaderProvider","children","useState","open","setOpen","Provider","value","show","hide","ModalContext","ModalProvider","title","content","onCancelFunction","onOkFunction","modalConfig","setModalConfig","ArticleFragmentDoc","gql","InterestFragmentDoc","LanguageFragmentDoc","RepositoryFragmentDoc","ResponseFragmentDoc","UserFragmentDoc","PostBookmarkDocument","usePostBookmarkMutation","Urql","DeleteBookmarkDocument","useDeleteBookmarkMutation","DeleteRepositoryDocument","useDeleteRepositoryMutation","LoginDocument","useLoginMutation","LogoutDocument","useLogoutMutation","PatchProfileDocument","usePatchProfileMutation","PostFeedbackDocument","usePostFeedbackMutation","PostRepositoryDocument","usePostRepositoryMutation","GetUserArticlesDocument","useGetUserArticlesQuery","options","query","GetLanguageDocument","useGetLanguageQuery","GetRepositoriesDocument","useGetRepositoriesQuery","MeDocument","useMeQuery","logoImg","process","Login","history","login","me","data","fetching","to","onSuccessGoogleLogin","response","a","tokenId","profileObj","email","className","src","alt","clientId","onSuccess","onFailure","render","renderProps","type","block","size","icon","GoogleOutlined","disabled","onClick","buttonText","cookiePolicy","betterUpdateQuery","cache","qi","result","fn","updateQuery","createUrqlClient","createClient","url","fetchOptions","credentials","exchanges","dedupExchange","cacheExchange","updates","Mutation","_result","args","info","errors","user","patchProfile","postBookmark","res","datas","getUserArticles","articles","push","deleteBookmark","newDataSet","filter","article","id","postRepository","getRepositories","deleteRepository","repoIndex","findIndex","repo","splice","fetchExchange","Repositories","React","lazy","Articles","Bookmarks","Profile","Page404","App","fallback","basename","exact","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","Header","SubMenu","Nav","menus","submenus","location","useLocation","logout","meData","onLogoutUser","window","href","style","position","zIndex","width","mode","defaultSelectedKeys","some","menu","link","pathname","label","activeKey","map","Item","UserOutlined","first_name","last_name","float","submenu","ProfileOutlined","LogoutOutlined","Loader","Breadcrumb","margin","find","List","listData","onClickBookmark","onChangePage","total","onDeleteBookmark","page","bookmarked","item","bookmark","idno","itemLayout","pagination","onChange","pageSize","current","pageSizeOptions","locale","emptyText","subtitle","dataSource","renderItem","actions","tag_list","tag","color","extra","BookOutlined","DeleteOutlined","danger","Meta","avatar","GithubOutlined","target","rel","description","Modal","toggleModal","onCancel","visible","footer","ConfirmationModal","Title","Text","emptyImg","Empty","level","PageLoader","Content","ReadOutlined","subMenus","Layout","props","modal","useContext","loader","padding","marginTop","minHeight","ProtectedRoute","Component","AntdFooter","Footer","Paragraph","TextArea","message","setMessage","postFeedback","submitProcessing","setSubmitProcessing","onSubmitFeedback","evt","preventDefault","undefined","code","textAlign","span","xs","md","lg","shape","FacebookOutlined","TwitterOutlined","LinkedinOutlined","onSubmit","maxLength","rows","showCount","placeholder","onChangeMessageHandler","SendOutlined","htmlType","loading","moment","format"],"mappings":"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","file":"static/js/main.dcedb871.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nconst LoaderContext: any = createContext('');\r\n\r\nexport const LoaderProvider: React.FC = ({ children }) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const show = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const hide = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <LoaderContext.Provider\r\n      value={{\r\n        show,\r\n        hide,\r\n        open,\r\n      }}\r\n    >\r\n      {children}\r\n    </LoaderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LoaderContext;\r\n","import React, { createContext, useState } from 'react';\r\n// import { Modal as AntdModal, Button, Space } from 'antd';\r\n\r\nconst ModalContext: any = createContext(null);\r\nexport const ModalProvider: React.FC<{}> = ({ children }) => {\r\n  const [open, setOpen] = useState<Boolean>(false);\r\n  const [modalConfig, setModalConfig] = useState({\r\n    title: null,\r\n    content: null,\r\n    onCancelFunction: () => {},\r\n    onOkFunction: () => {},\r\n  });\r\n\r\n  const show = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const hide = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        open,\r\n        show,\r\n        hide,\r\n        setModalConfig,\r\n        modalConfig,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalContext;\r\n","import gql from 'graphql-tag';\r\nimport * as React from 'react';\r\nimport * as Urql from 'urql';\r\nexport type Maybe<T> = T | null;\r\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\r\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n  ID: string;\r\n  String: string;\r\n  Boolean: boolean;\r\n  Int: number;\r\n  Float: number;\r\n};\r\n\r\nexport type Article = {\r\n  __typename?: 'Article';\r\n  id: Scalars['Int'];\r\n  userId: Scalars['Int'];\r\n  idno: Scalars['String'];\r\n  href: Scalars['String'];\r\n  title: Scalars['String'];\r\n  content: Scalars['String'];\r\n  tags: Scalars['String'];\r\n  author: Scalars['String'];\r\n  avatar: Scalars['String'];\r\n  createdAt: Scalars['String'];\r\n  updatedAt: Scalars['String'];\r\n};\r\n\r\nexport type Articles = {\r\n  __typename?: 'Articles';\r\n  articles?: Maybe<Array<Article>>;\r\n};\r\n\r\nexport type FieldError = {\r\n  __typename?: 'FieldError';\r\n  field: Scalars['String'];\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type Interest = {\r\n  __typename?: 'Interest';\r\n  id: Scalars['Int'];\r\n  userId: Scalars['Int'];\r\n  interest: Scalars['String'];\r\n  createdAt: Scalars['String'];\r\n  updatedAt: Scalars['String'];\r\n  user: User;\r\n};\r\n\r\nexport type Language = {\r\n  __typename?: 'Language';\r\n  id: Scalars['Int'];\r\n  language: Scalars['String'];\r\n  value: Scalars['String'];\r\n  color: Scalars['String'];\r\n  createdAt: Scalars['String'];\r\n  updatedAt: Scalars['String'];\r\n  user: User;\r\n};\r\n\r\nexport type Mutation = {\r\n  __typename?: 'Mutation';\r\n  register: UserResponse;\r\n  login: UserResponse;\r\n  patchProfile: UserResponse;\r\n  logout: Scalars['Boolean'];\r\n  postBookmark: Response;\r\n  deleteBookmark: Response;\r\n  postRepository: RepositoryResponse;\r\n  deleteRepository: Scalars['Boolean'];\r\n  postFeedback: Res;\r\n};\r\n\r\n\r\nexport type MutationRegisterArgs = {\r\n  options: InputRegistration;\r\n};\r\n\r\n\r\nexport type MutationLoginArgs = {\r\n  options: InputLogin;\r\n};\r\n\r\n\r\nexport type MutationPatchProfileArgs = {\r\n  options: InputPatchUser;\r\n};\r\n\r\n\r\nexport type MutationPostBookmarkArgs = {\r\n  input: InputBookmark;\r\n};\r\n\r\n\r\nexport type MutationDeleteBookmarkArgs = {\r\n  id: Scalars['Int'];\r\n};\r\n\r\n\r\nexport type MutationPostRepositoryArgs = {\r\n  input: InputRepository;\r\n};\r\n\r\n\r\nexport type MutationDeleteRepositoryArgs = {\r\n  id: Scalars['Int'];\r\n};\r\n\r\n\r\nexport type MutationPostFeedbackArgs = {\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type Query = {\r\n  __typename?: 'Query';\r\n  me?: Maybe<User>;\r\n  getUserArticles?: Maybe<Articles>;\r\n  getLanguages: Array<Language>;\r\n  getRepositories: Array<Repository>;\r\n};\r\n\r\nexport type Repository = {\r\n  __typename?: 'Repository';\r\n  id: Scalars['Int'];\r\n  userId: Scalars['Int'];\r\n  href: Scalars['String'];\r\n  title: Scalars['String'];\r\n  description: Scalars['String'];\r\n  createdAt: Scalars['String'];\r\n  updatedAt: Scalars['String'];\r\n};\r\n\r\nexport type RepositoryResponse = {\r\n  __typename?: 'RepositoryResponse';\r\n  code: Scalars['Float'];\r\n  message: Scalars['String'];\r\n  data?: Maybe<Repository>;\r\n};\r\n\r\nexport type Res = {\r\n  __typename?: 'Res';\r\n  code: Scalars['Float'];\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type Response = {\r\n  __typename?: 'Response';\r\n  code: Scalars['Float'];\r\n  message: Scalars['String'];\r\n  data?: Maybe<Article>;\r\n};\r\n\r\nexport type User = {\r\n  __typename?: 'User';\r\n  id: Scalars['String'];\r\n  email: Scalars['String'];\r\n  languageId?: Maybe<Scalars['Int']>;\r\n  first_name: Scalars['String'];\r\n  last_name: Scalars['String'];\r\n  avatar: Scalars['String'];\r\n  createdAt: Scalars['String'];\r\n  updatedAt: Scalars['String'];\r\n  interests: Array<Interest>;\r\n  language?: Maybe<Language>;\r\n  decryptedID: Scalars['String'];\r\n};\r\n\r\nexport type UserResponse = {\r\n  __typename?: 'UserResponse';\r\n  errors?: Maybe<Array<FieldError>>;\r\n  user?: Maybe<User>;\r\n};\r\n\r\nexport type InputBookmark = {\r\n  href: Scalars['String'];\r\n  idno: Scalars['String'];\r\n  title: Scalars['String'];\r\n  content: Scalars['String'];\r\n  tags: Scalars['String'];\r\n  author: Scalars['String'];\r\n  avatar: Scalars['String'];\r\n};\r\n\r\nexport type InputLogin = {\r\n  tokenId: Scalars['String'];\r\n  email: Scalars['String'];\r\n};\r\n\r\nexport type InputPatchUser = {\r\n  email: Scalars['String'];\r\n  first_name: Scalars['String'];\r\n  last_name: Scalars['String'];\r\n  interests: Array<Scalars['String']>;\r\n  languageId: Scalars['Int'];\r\n};\r\n\r\nexport type InputRegistration = {\r\n  username: Scalars['String'];\r\n  password: Scalars['String'];\r\n  email: Scalars['String'];\r\n  first_name: Scalars['String'];\r\n  last_name: Scalars['String'];\r\n};\r\n\r\nexport type InputRepository = {\r\n  title: Scalars['String'];\r\n  href: Scalars['String'];\r\n  description: Scalars['String'];\r\n};\r\n\r\nexport type ArticleFragment = (\r\n  { __typename?: 'Article' }\r\n  & Pick<Article, 'id' | 'href' | 'idno' | 'title' | 'author' | 'tags' | 'content' | 'avatar'>\r\n);\r\n\r\nexport type InterestFragment = (\r\n  { __typename?: 'Interest' }\r\n  & Pick<Interest, 'id' | 'interest'>\r\n);\r\n\r\nexport type LanguageFragment = (\r\n  { __typename?: 'Language' }\r\n  & Pick<Language, 'id' | 'language' | 'color' | 'value'>\r\n);\r\n\r\nexport type RepositoryFragment = (\r\n  { __typename?: 'Repository' }\r\n  & Pick<Repository, 'id' | 'title' | 'description' | 'href'>\r\n);\r\n\r\nexport type ResponseFragment = (\r\n  { __typename?: 'Res' }\r\n  & Pick<Res, 'code' | 'message'>\r\n);\r\n\r\nexport type UserFragment = (\r\n  { __typename?: 'User' }\r\n  & Pick<User, 'id' | 'email' | 'first_name' | 'last_name' | 'avatar'>\r\n);\r\n\r\nexport type PostBookmarkMutationVariables = Exact<{\r\n  input: InputBookmark;\r\n}>;\r\n\r\n\r\nexport type PostBookmarkMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { postBookmark: (\r\n    { __typename?: 'Response' }\r\n    & Pick<Response, 'code' | 'message'>\r\n    & { data?: Maybe<(\r\n      { __typename?: 'Article' }\r\n      & ArticleFragment\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type DeleteBookmarkMutationVariables = Exact<{\r\n  id: Scalars['Int'];\r\n}>;\r\n\r\n\r\nexport type DeleteBookmarkMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { deleteBookmark: (\r\n    { __typename?: 'Response' }\r\n    & Pick<Response, 'code' | 'message'>\r\n    & { data?: Maybe<(\r\n      { __typename?: 'Article' }\r\n      & ArticleFragment\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type DeleteRepositoryMutationVariables = Exact<{\r\n  id: Scalars['Int'];\r\n}>;\r\n\r\n\r\nexport type DeleteRepositoryMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & Pick<Mutation, 'deleteRepository'>\r\n);\r\n\r\nexport type LoginMutationVariables = Exact<{\r\n  options: InputLogin;\r\n}>;\r\n\r\n\r\nexport type LoginMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { login: (\r\n    { __typename?: 'UserResponse' }\r\n    & { user?: Maybe<(\r\n      { __typename?: 'User' }\r\n      & { interests: Array<(\r\n        { __typename?: 'Interest' }\r\n        & InterestFragment\r\n      )> }\r\n      & UserFragment\r\n    )>, errors?: Maybe<Array<(\r\n      { __typename?: 'FieldError' }\r\n      & Pick<FieldError, 'field' | 'message'>\r\n    )>> }\r\n  ) }\r\n);\r\n\r\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type LogoutMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & Pick<Mutation, 'logout'>\r\n);\r\n\r\nexport type PatchProfileMutationVariables = Exact<{\r\n  options: InputPatchUser;\r\n}>;\r\n\r\n\r\nexport type PatchProfileMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { patchProfile: (\r\n    { __typename?: 'UserResponse' }\r\n    & { user?: Maybe<(\r\n      { __typename?: 'User' }\r\n      & { interests: Array<(\r\n        { __typename?: 'Interest' }\r\n        & InterestFragment\r\n      )>, language?: Maybe<(\r\n        { __typename?: 'Language' }\r\n        & LanguageFragment\r\n      )> }\r\n      & UserFragment\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type PostFeedbackMutationVariables = Exact<{\r\n  message: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type PostFeedbackMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { postFeedback: (\r\n    { __typename?: 'Res' }\r\n    & ResponseFragment\r\n  ) }\r\n);\r\n\r\nexport type PostRepositoryMutationVariables = Exact<{\r\n  input: InputRepository;\r\n}>;\r\n\r\n\r\nexport type PostRepositoryMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { postRepository: (\r\n    { __typename?: 'RepositoryResponse' }\r\n    & Pick<RepositoryResponse, 'code' | 'message'>\r\n    & { data?: Maybe<(\r\n      { __typename?: 'Repository' }\r\n      & RepositoryFragment\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type GetUserArticlesQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetUserArticlesQuery = (\r\n  { __typename?: 'Query' }\r\n  & { getUserArticles?: Maybe<(\r\n    { __typename?: 'Articles' }\r\n    & { articles?: Maybe<Array<(\r\n      { __typename?: 'Article' }\r\n      & ArticleFragment\r\n    )>> }\r\n  )> }\r\n);\r\n\r\nexport type GetLanguageQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetLanguageQuery = (\r\n  { __typename?: 'Query' }\r\n  & { getLanguages: Array<(\r\n    { __typename?: 'Language' }\r\n    & LanguageFragment\r\n  )> }\r\n);\r\n\r\nexport type GetRepositoriesQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetRepositoriesQuery = (\r\n  { __typename?: 'Query' }\r\n  & { getRepositories: Array<(\r\n    { __typename?: 'Repository' }\r\n    & RepositoryFragment\r\n  )> }\r\n);\r\n\r\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type MeQuery = (\r\n  { __typename?: 'Query' }\r\n  & { me?: Maybe<(\r\n    { __typename?: 'User' }\r\n    & { interests: Array<(\r\n      { __typename?: 'Interest' }\r\n      & InterestFragment\r\n    )>, language?: Maybe<(\r\n      { __typename?: 'Language' }\r\n      & LanguageFragment\r\n    )> }\r\n    & UserFragment\r\n  )> }\r\n);\r\n\r\nexport const ArticleFragmentDoc = gql`\r\n    fragment Article on Article {\r\n  id\r\n  href\r\n  idno\r\n  title\r\n  author\r\n  tags\r\n  content\r\n  avatar\r\n}\r\n    `;\r\nexport const InterestFragmentDoc = gql`\r\n    fragment Interest on Interest {\r\n  id\r\n  interest\r\n}\r\n    `;\r\nexport const LanguageFragmentDoc = gql`\r\n    fragment Language on Language {\r\n  id\r\n  language\r\n  color\r\n  value\r\n}\r\n    `;\r\nexport const RepositoryFragmentDoc = gql`\r\n    fragment Repository on Repository {\r\n  id\r\n  title\r\n  description\r\n  href\r\n}\r\n    `;\r\nexport const ResponseFragmentDoc = gql`\r\n    fragment Response on Res {\r\n  code\r\n  message\r\n}\r\n    `;\r\nexport const UserFragmentDoc = gql`\r\n    fragment User on User {\r\n  id\r\n  email\r\n  first_name\r\n  last_name\r\n  avatar\r\n}\r\n    `;\r\nexport const PostBookmarkDocument = gql`\r\n    mutation PostBookmark($input: inputBookmark!) {\r\n  postBookmark(input: $input) {\r\n    code\r\n    message\r\n    data {\r\n      ...Article\r\n    }\r\n  }\r\n}\r\n    ${ArticleFragmentDoc}`;\r\n\r\nexport const PostBookmarkComponent = (props: Omit<Urql.MutationProps<PostBookmarkMutation, PostBookmarkMutationVariables>, 'query'> & { variables?: PostBookmarkMutationVariables }) => (\r\n  <Urql.Mutation {...props} query={PostBookmarkDocument} />\r\n);\r\n\r\n\r\nexport function usePostBookmarkMutation() {\r\n  return Urql.useMutation<PostBookmarkMutation, PostBookmarkMutationVariables>(PostBookmarkDocument);\r\n};\r\nexport const DeleteBookmarkDocument = gql`\r\n    mutation DeleteBookmark($id: Int!) {\r\n  deleteBookmark(id: $id) {\r\n    code\r\n    message\r\n    data {\r\n      ...Article\r\n    }\r\n  }\r\n}\r\n    ${ArticleFragmentDoc}`;\r\n\r\nexport const DeleteBookmarkComponent = (props: Omit<Urql.MutationProps<DeleteBookmarkMutation, DeleteBookmarkMutationVariables>, 'query'> & { variables?: DeleteBookmarkMutationVariables }) => (\r\n  <Urql.Mutation {...props} query={DeleteBookmarkDocument} />\r\n);\r\n\r\n\r\nexport function useDeleteBookmarkMutation() {\r\n  return Urql.useMutation<DeleteBookmarkMutation, DeleteBookmarkMutationVariables>(DeleteBookmarkDocument);\r\n};\r\nexport const DeleteRepositoryDocument = gql`\r\n    mutation DeleteRepository($id: Int!) {\r\n  deleteRepository(id: $id)\r\n}\r\n    `;\r\n\r\nexport const DeleteRepositoryComponent = (props: Omit<Urql.MutationProps<DeleteRepositoryMutation, DeleteRepositoryMutationVariables>, 'query'> & { variables?: DeleteRepositoryMutationVariables }) => (\r\n  <Urql.Mutation {...props} query={DeleteRepositoryDocument} />\r\n);\r\n\r\n\r\nexport function useDeleteRepositoryMutation() {\r\n  return Urql.useMutation<DeleteRepositoryMutation, DeleteRepositoryMutationVariables>(DeleteRepositoryDocument);\r\n};\r\nexport const LoginDocument = gql`\r\n    mutation Login($options: inputLogin!) {\r\n  login(options: $options) {\r\n    user {\r\n      ...User\r\n      interests {\r\n        ...Interest\r\n      }\r\n    }\r\n    errors {\r\n      field\r\n      message\r\n    }\r\n  }\r\n}\r\n    ${UserFragmentDoc}\r\n${InterestFragmentDoc}`;\r\n\r\nexport const LoginComponent = (props: Omit<Urql.MutationProps<LoginMutation, LoginMutationVariables>, 'query'> & { variables?: LoginMutationVariables }) => (\r\n  <Urql.Mutation {...props} query={LoginDocument} />\r\n);\r\n\r\n\r\nexport function useLoginMutation() {\r\n  return Urql.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument);\r\n};\r\nexport const LogoutDocument = gql`\r\n    mutation Logout {\r\n  logout\r\n}\r\n    `;\r\n\r\nexport const LogoutComponent = (props: Omit<Urql.MutationProps<LogoutMutation, LogoutMutationVariables>, 'query'> & { variables?: LogoutMutationVariables }) => (\r\n  <Urql.Mutation {...props} query={LogoutDocument} />\r\n);\r\n\r\n\r\nexport function useLogoutMutation() {\r\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument);\r\n};\r\nexport const PatchProfileDocument = gql`\r\n    mutation PatchProfile($options: inputPatchUser!) {\r\n  patchProfile(options: $options) {\r\n    user {\r\n      ...User\r\n      interests {\r\n        ...Interest\r\n      }\r\n      language {\r\n        ...Language\r\n      }\r\n    }\r\n  }\r\n}\r\n    ${UserFragmentDoc}\r\n${InterestFragmentDoc}\r\n${LanguageFragmentDoc}`;\r\n\r\nexport const PatchProfileComponent = (props: Omit<Urql.MutationProps<PatchProfileMutation, PatchProfileMutationVariables>, 'query'> & { variables?: PatchProfileMutationVariables }) => (\r\n  <Urql.Mutation {...props} query={PatchProfileDocument} />\r\n);\r\n\r\n\r\nexport function usePatchProfileMutation() {\r\n  return Urql.useMutation<PatchProfileMutation, PatchProfileMutationVariables>(PatchProfileDocument);\r\n};\r\nexport const PostFeedbackDocument = gql`\r\n    mutation PostFeedback($message: String!) {\r\n  postFeedback(message: $message) {\r\n    ...Response\r\n  }\r\n}\r\n    ${ResponseFragmentDoc}`;\r\n\r\nexport const PostFeedbackComponent = (props: Omit<Urql.MutationProps<PostFeedbackMutation, PostFeedbackMutationVariables>, 'query'> & { variables?: PostFeedbackMutationVariables }) => (\r\n  <Urql.Mutation {...props} query={PostFeedbackDocument} />\r\n);\r\n\r\n\r\nexport function usePostFeedbackMutation() {\r\n  return Urql.useMutation<PostFeedbackMutation, PostFeedbackMutationVariables>(PostFeedbackDocument);\r\n};\r\nexport const PostRepositoryDocument = gql`\r\n    mutation PostRepository($input: inputRepository!) {\r\n  postRepository(input: $input) {\r\n    code\r\n    message\r\n    data {\r\n      ...Repository\r\n    }\r\n  }\r\n}\r\n    ${RepositoryFragmentDoc}`;\r\n\r\nexport const PostRepositoryComponent = (props: Omit<Urql.MutationProps<PostRepositoryMutation, PostRepositoryMutationVariables>, 'query'> & { variables?: PostRepositoryMutationVariables }) => (\r\n  <Urql.Mutation {...props} query={PostRepositoryDocument} />\r\n);\r\n\r\n\r\nexport function usePostRepositoryMutation() {\r\n  return Urql.useMutation<PostRepositoryMutation, PostRepositoryMutationVariables>(PostRepositoryDocument);\r\n};\r\nexport const GetUserArticlesDocument = gql`\r\n    query GetUserArticles {\r\n  getUserArticles {\r\n    articles {\r\n      ...Article\r\n    }\r\n  }\r\n}\r\n    ${ArticleFragmentDoc}`;\r\n\r\nexport const GetUserArticlesComponent = (props: Omit<Urql.QueryProps<GetUserArticlesQuery, GetUserArticlesQueryVariables>, 'query'> & { variables?: GetUserArticlesQueryVariables }) => (\r\n  <Urql.Query {...props} query={GetUserArticlesDocument} />\r\n);\r\n\r\n\r\nexport function useGetUserArticlesQuery(options: Omit<Urql.UseQueryArgs<GetUserArticlesQueryVariables>, 'query'> = {}) {\r\n  return Urql.useQuery<GetUserArticlesQuery>({ query: GetUserArticlesDocument, ...options });\r\n};\r\nexport const GetLanguageDocument = gql`\r\n    query GetLanguage {\r\n  getLanguages {\r\n    ...Language\r\n  }\r\n}\r\n    ${LanguageFragmentDoc}`;\r\n\r\nexport const GetLanguageComponent = (props: Omit<Urql.QueryProps<GetLanguageQuery, GetLanguageQueryVariables>, 'query'> & { variables?: GetLanguageQueryVariables }) => (\r\n  <Urql.Query {...props} query={GetLanguageDocument} />\r\n);\r\n\r\n\r\nexport function useGetLanguageQuery(options: Omit<Urql.UseQueryArgs<GetLanguageQueryVariables>, 'query'> = {}) {\r\n  return Urql.useQuery<GetLanguageQuery>({ query: GetLanguageDocument, ...options });\r\n};\r\nexport const GetRepositoriesDocument = gql`\r\n    query GetRepositories {\r\n  getRepositories {\r\n    ...Repository\r\n  }\r\n}\r\n    ${RepositoryFragmentDoc}`;\r\n\r\nexport const GetRepositoriesComponent = (props: Omit<Urql.QueryProps<GetRepositoriesQuery, GetRepositoriesQueryVariables>, 'query'> & { variables?: GetRepositoriesQueryVariables }) => (\r\n  <Urql.Query {...props} query={GetRepositoriesDocument} />\r\n);\r\n\r\n\r\nexport function useGetRepositoriesQuery(options: Omit<Urql.UseQueryArgs<GetRepositoriesQueryVariables>, 'query'> = {}) {\r\n  return Urql.useQuery<GetRepositoriesQuery>({ query: GetRepositoriesDocument, ...options });\r\n};\r\nexport const MeDocument = gql`\r\n    query Me {\r\n  me {\r\n    ...User\r\n    interests {\r\n      ...Interest\r\n    }\r\n    language {\r\n      ...Language\r\n    }\r\n  }\r\n}\r\n    ${UserFragmentDoc}\r\n${InterestFragmentDoc}\r\n${LanguageFragmentDoc}`;\r\n\r\nexport const MeComponent = (props: Omit<Urql.QueryProps<MeQuery, MeQueryVariables>, 'query'> & { variables?: MeQueryVariables }) => (\r\n  <Urql.Query {...props} query={MeDocument} />\r\n);\r\n\r\n\r\nexport function useMeQuery(options: Omit<Urql.UseQueryArgs<MeQueryVariables>, 'query'> = {}) {\r\n  return Urql.useQuery<MeQuery>({ query: MeDocument, ...options });\r\n};","import React from 'react';\r\nimport { Button } from 'antd';\r\n// import axios from 'axios';\r\nimport './Login.less';\r\nimport {\r\n  // UserOutlined,\r\n  // LockOutlined,\r\n  GoogleOutlined,\r\n  // LoginOutlined,\r\n} from '@ant-design/icons';\r\nimport { Loader } from '../../components';\r\n\r\n// import { updateObject } from '../../utils';\r\nimport { useLoginMutation, useMeQuery } from '../../generated/graphql';\r\nimport { Redirect } from 'react-router-dom';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\n// const { Title } = Typography;\r\n\r\ninterface LoginProps {\r\n  history: any;\r\n}\r\n\r\nconst logoImg = `${process.env.REACT_APP_BASENAME}images/logo.png`;\r\n\r\nexport const Login: React.FC<LoginProps> = ({ history }) => {\r\n  // const [form, setForm] = useState({\r\n  //   email: null,\r\n  //   tokenId: null,\r\n  // });\r\n\r\n  const [, login] = useLoginMutation();\r\n  const [{ data: me, fetching }] = useMeQuery();\r\n\r\n  if (!fetching) {\r\n    if (me?.me) {\r\n      return <Redirect to=\"/repositories\" />;\r\n    }\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n\r\n  // const OnFieldChange = (evt: any, key: any) => {\r\n  //   const updatedForm: any = updateObject(form, {\r\n  //     [key]: evt.target.value,\r\n  //   });\r\n\r\n  //   setForm(updatedForm);\r\n  // };\r\n\r\n  // const onSubmitLoginForm = async () => {\r\n  //   const result = await login({ options: form });\r\n  //   console.log(result);\r\n  // };\r\n\r\n  const onSuccessGoogleLogin = async (response: any) => {\r\n    const { tokenId, profileObj } = response;\r\n    // setForm({\r\n    //   email: profileObj.email,\r\n    //   tokenId,\r\n    // });\r\n\r\n    login({\r\n      options: {\r\n        email: profileObj.email,\r\n        tokenId,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onFailedGoogleLogin = () => {};\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {/* <div className=\"login-header\"></div> */}\r\n      <div className=\"login-form-container\">\r\n        <div className=\"logo-container\">\r\n          <img src={logoImg} alt=\"CLIPNOTES\" />\r\n          {/* <Title level={4}>Clip Book</Title> */}\r\n        </div>\r\n        <div className=\"login-google\">\r\n          <div className=\"login-note\">\r\n            Please sign-in using your google account.\r\n          </div>\r\n          <div className=\"btn-container\">\r\n            {/* <Button\r\n              type=\"primary\"\r\n              // danger\r\n              block\r\n              size=\"large\"\r\n              icon={<GoogleOutlined />}\r\n            >\r\n              Login via google\r\n            </Button> */}\r\n            <GoogleLogin\r\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID as any}\r\n              onSuccess={onSuccessGoogleLogin}\r\n              onFailure={onFailedGoogleLogin}\r\n              render={renderProps => (\r\n                // <Button\r\n                // \tonClick={renderProps.onClick}\r\n                // \tclassName=\"google-button full-button\"\r\n                // \tdisabled={renderProps.disabled}\r\n                // >\r\n                // \t<div className=\"google-button-logo\">\r\n                // \t\t<img\r\n                // \t\t\tsrc={googleLogo}\r\n                // \t\t\talt=\"Google Logo\"\r\n                // \t\t/>\r\n                // \t</div>\r\n                // \t<div\r\n                // \t\tstyle={{ paddingLeft: '50px' }}\r\n                // \t>\r\n                // \t\tLogin with Google account\r\n                // \t</div>\r\n                // </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  // danger\r\n                  block\r\n                  size=\"large\"\r\n                  icon={<GoogleOutlined />}\r\n                  disabled={renderProps.disabled}\r\n                  onClick={renderProps.onClick}\r\n                >\r\n                  Sign in with google\r\n                </Button>\r\n              )}\r\n              buttonText=\"Login\"\r\n              cookiePolicy={'single_host_origin'}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import { Cache, QueryInput } from '@urql/exchange-graphcache';\r\n\r\nexport function betterUpdateQuery<Result, Query>(\r\n  cache: Cache,\r\n  qi: QueryInput,\r\n  result: any,\r\n  fn: (r: Result, q: Query) => Query\r\n) {\r\n  return cache.updateQuery(qi, data => fn(result, data as any) as any);\r\n}\r\n","import { cacheExchange } from '@urql/exchange-graphcache';\r\nimport { createClient, dedupExchange, fetchExchange } from 'urql';\r\nimport {\r\n  GetUserArticlesDocument,\r\n  GetUserArticlesQuery,\r\n  LoginMutation,\r\n  MeDocument,\r\n  MeQuery,\r\n  PostBookmarkMutation,\r\n  DeleteBookmarkMutation,\r\n  PatchProfileMutation,\r\n  // GetRepositoriesQueryVariables,\r\n} from '../generated/graphql';\r\nimport { betterUpdateQuery } from './betterUpdateQuery';\r\nimport gql from 'graphql-tag';\r\n\r\nexport const createUrqlClient = createClient({\r\n  url: `${process.env.REACT_APP_API_URL}/graphql`,\r\n  fetchOptions: {\r\n    credentials: 'include',\r\n  },\r\n  exchanges: [\r\n    dedupExchange,\r\n    cacheExchange({\r\n      updates: {\r\n        Mutation: {\r\n          //   logout: (_result, args, cache, info) => {\r\n          //     betterUpdateQuery<LogoutMutation, MeQuery>(\r\n          //       cache,\r\n          //       { query: MeDocument },\r\n          //       _result,\r\n          //       () => ({ me: null })\r\n          //     );\r\n          //   },\r\n          login: (_result, args, cache, info) => {\r\n            betterUpdateQuery<LoginMutation, MeQuery>(\r\n              cache,\r\n              { query: MeDocument },\r\n              _result,\r\n              (result, query) => {\r\n                if (result.login.errors) {\r\n                  return query;\r\n                } else {\r\n                  // console.log(result.login.user);\r\n                  return {\r\n                    me: result.login.user,\r\n                  };\r\n                }\r\n              }\r\n            );\r\n          },\r\n          patchProfile: (_result, args, cache, info) => {\r\n            betterUpdateQuery<PatchProfileMutation, MeQuery>(\r\n              cache,\r\n              { query: MeDocument },\r\n              _result,\r\n              (result, query) => {\r\n                return {\r\n                  me: result.patchProfile.user,\r\n                };\r\n              }\r\n            );\r\n          },\r\n\r\n          postBookmark: (_result: any, args, cache, info) => {\r\n            betterUpdateQuery<PostBookmarkMutation, GetUserArticlesQuery>(\r\n              cache,\r\n              { query: GetUserArticlesDocument },\r\n              _result,\r\n              (res: any, query: any) => {\r\n                if (_result?.postBookmark.data) {\r\n                  cache.updateQuery(\r\n                    { query: GetUserArticlesDocument },\r\n                    (datas: any) => {\r\n                      datas.getUserArticles.articles.push(\r\n                        _result?.postBookmark?.data\r\n                      );\r\n                      return datas;\r\n                    }\r\n                  );\r\n                }\r\n                return {\r\n                  getUserArticles: {\r\n                    articles: [\r\n                      ...query.getUserArticles.articles,\r\n                      res.postBookmark.data,\r\n                    ],\r\n                  },\r\n                };\r\n              }\r\n            );\r\n          },\r\n\r\n          deleteBookmark: (_result: any, args, cache, info) => {\r\n            betterUpdateQuery<DeleteBookmarkMutation, GetUserArticlesQuery>(\r\n              cache,\r\n              { query: GetUserArticlesDocument },\r\n              _result,\r\n              (res: any, query: any) => {\r\n                if (_result?.deleteBookmark?.data) {\r\n                  cache.updateQuery(\r\n                    { query: GetUserArticlesDocument },\r\n                    (datas: any) => {\r\n                      // datas.getUserArticles.articles.push(\r\n                      //   _result?.postBookmark?.data\r\n                      // );\r\n                      const newDataSet = datas.getUserArticles.articles.filter(\r\n                        (article: any) =>\r\n                          article.id !== _result?.deleteBookmark?.data?.id\r\n                      );\r\n                      datas.getUserArticles.articles = newDataSet;\r\n                      return datas;\r\n                    }\r\n                  );\r\n                }\r\n                return {\r\n                  getUserArticles: {\r\n                    articles: query.getUserArticles.articles.filter(\r\n                      (article: any) =>\r\n                        article.id !== _result?.deleteBookmark?.data?.id\r\n                    ),\r\n                  },\r\n                };\r\n              }\r\n            );\r\n          },\r\n\r\n          postRepository: (_result: any, args, cache, info) => {\r\n            // cache.invalidate({\r\n            //   __typename: 'GetRepositories',\r\n            // });\r\n            // TODO invalidate cache\r\n            // const allFields = cache.inspectFields('Query');\r\n            // console.log(allFields);\r\n            // const fieldInfos = allFields.filter(\r\n            //   info => info.fieldName === 'getRepositories'\r\n            // );\r\n            // console.log('Field infos', fieldInfos);\r\n            // fieldInfos.forEach(fi => {\r\n            //   cache.invalidate('Query', 'getRepositories', fi.arguments || {});\r\n            // });\r\n            const getRepositories = gql`\r\n              query GetRepositories {\r\n                getRepositories {\r\n                  ...GetRepositoriesQueryVariables\r\n                }\r\n              }\r\n            `;\r\n\r\n            cache.updateQuery({ query: getRepositories }, (data: any) => {\r\n              data?.getRepositories?.push(_result?.postRepository);\r\n              return data;\r\n            });\r\n          },\r\n\r\n          deleteRepository: (_result: any, args, cache, info) => {\r\n            const getRepositories = gql`\r\n              query GetRepositories {\r\n                getRepositories {\r\n                  id\r\n                  title\r\n                  description\r\n                  href\r\n                }\r\n              }\r\n            `;\r\n\r\n            cache.updateQuery({ query: getRepositories }, (data: any) => {\r\n              // console.log(data?.getRepositories);\r\n              // const repositories = data?.getRepositories?.filter(\r\n              //   (repo: any) => repo.id !== args?.id\r\n              // );\r\n              // console.log(repositories);\r\n              const repoIndex = data?.getRepositories?.findIndex(\r\n                (repo: any) => repo.id === args?.id\r\n              );\r\n              data?.getRepositories?.splice(repoIndex, 1);\r\n              return data;\r\n            });\r\n          },\r\n\r\n          // postBookmark: (_result, args, cache, info) => {\r\n          //   betterUpdateQuery<PostBookmarkMutation, GetUserBookmarksQuery>)\r\n          //   cache,\r\n          //   { query:  GetUserBookmarksDocument },\r\n          //   _result,\r\n          //   (result, query) => {\r\n          //   }\r\n          // }\r\n          //   register: (_result, args, cache, info) => {\r\n          //     betterUpdateQuery<RegisterMutation, MeQuery>(\r\n          //       cache,\r\n          //       { query: MeDocument },\r\n          //       _result,\r\n          //       (result, query) => {\r\n          //         if (result.register.errors) {\r\n          //           return query;\r\n          //         } else {\r\n          //           return {\r\n          //             me: result.register.user,\r\n          //           };\r\n          //         }\r\n          //       }\r\n          //     );\r\n          //   },\r\n        },\r\n      },\r\n    }),\r\n    fetchExchange,\r\n  ],\r\n});\r\n","import React, { Suspense } from 'react';\r\nimport 'antd/dist/antd.less';\r\n// import Layout from '../hoc/Layout/Layout';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Login from '../pages/Login/Login';\r\nimport { createUrqlClient } from '../utils/createUrqlClient';\r\nimport { Provider } from 'urql';\r\nimport { ProtectedRoute, PageLoader } from '../components';\r\n// import { Loader } from '../components';\r\nimport { ModalProvider } from '../context/ModalContext/ModalContext';\r\nimport { LoaderProvider } from '../context/LoaderContext/LoaderContext';\r\nimport './App.less';\r\n// import Repositories from '../pages/Repositories/Repositories';\r\n\r\n// const Home = React.lazy(() => import('../pages/Home/Home'));\r\nconst Repositories = React.lazy(() =>\r\n  import('../pages/Repositories/Repositories')\r\n);\r\n\r\nconst Articles = React.lazy(() => import('../pages/Articles/Articles'));\r\nconst Bookmarks = React.lazy(() => import('../pages/Bookmarks/Bookmarks'));\r\nconst Profile = React.lazy(() => import('../pages/Profile/Profile'));\r\nconst Page404 = React.lazy(() => import('../pages/Page404/Page404'));\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <Suspense fallback={<PageLoader />}>\r\n      <ModalProvider>\r\n        <LoaderProvider>\r\n          <Router basename={process.env.REACT_APP_BASENAME}>\r\n            <Provider value={createUrqlClient}>\r\n              <Switch>\r\n                <Route exact component={Login} path=\"/\" />\r\n                {/* <ProtectedRoute component={Home} path=\"/home\" /> */}\r\n                <ProtectedRoute\r\n                  exact\r\n                  component={Repositories}\r\n                  path=\"/repositories\"\r\n                />\r\n                <ProtectedRoute exact component={Articles} path=\"/articles\" />\r\n                <ProtectedRoute\r\n                  exact\r\n                  component={Bookmarks}\r\n                  path=\"/clipped-notes\"\r\n                />\r\n                <ProtectedRoute exact component={Profile} path=\"/profile\" />\r\n                <Route component={Page404} />\r\n              </Switch>\r\n            </Provider>\r\n          </Router>\r\n        </LoaderProvider>\r\n      </ModalProvider>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport App from './App/index';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './override.less';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react';\r\nimport {\r\n  Menu,\r\n  Layout as AntdLayout,\r\n  // Avatar,\r\n  // Dropdown,\r\n  // Popover,\r\n  // Button,\r\n  // Divider,\r\n} from 'antd';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport './Nav.less';\r\nimport {\r\n  LogoutOutlined,\r\n  UserOutlined,\r\n  // SettingOutlined,\r\n  // BookOutlined,\r\n  ProfileOutlined,\r\n} from '@ant-design/icons';\r\nimport { useLogoutMutation, useMeQuery } from '../../generated/graphql';\r\n\r\nconst { Header } = AntdLayout;\r\nconst { SubMenu } = Menu;\r\n\r\ninterface NavProps {\r\n  menus: any;\r\n  submenus: Array<any>;\r\n}\r\n\r\nconst logoImg = `${process.env.REACT_APP_BASENAME}images/logo.png`;\r\n// const logo50x80 = `${process.env.REACT_APP_BASENAME}images/50x80.png`;\r\n\r\nexport const Nav: React.FC<NavProps> = ({ menus, submenus }) => {\r\n  const location = useLocation();\r\n  // const [open, setOpen] = useState(false);\r\n  const [, logout] = useLogoutMutation();\r\n  const [{ data: meData }] = useMeQuery();\r\n\r\n  const onLogoutUser = async () => {\r\n    await logout();\r\n    window.location.href = '/';\r\n  };\r\n\r\n  // const onClickAvatar = () => {\r\n  //   setOpen(!open);\r\n  // };\r\n  return (\r\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n      <div className=\"logo\">\r\n        <img src={logoImg} alt=\"CLIPNOTES\" />\r\n        {/* <div>CLIPBOOK</div> */}\r\n      </div>\r\n      <Menu\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={\r\n          menus.some((menu: any) => menu.link === location.pathname)\r\n            ? menus[\r\n                menus.findIndex((menu: any) => menu.link === location.pathname)\r\n              ].label\r\n            : 'bookmarks'\r\n        }\r\n        {...(menus.findIndex((menu: any) => menu.link === location.pathname) >\r\n        -1\r\n          ? {\r\n              activeKey:\r\n                menus[\r\n                  menus.findIndex(\r\n                    (menu: any) => menu.link === location.pathname\r\n                  )\r\n                ].label,\r\n            }\r\n          : {})}\r\n      >\r\n        {menus.map((menu: any) => (\r\n          <Menu.Item key={menu.label} icon={menu.icon}>\r\n            <NavLink to={menu.link}>{menu.label}</NavLink>\r\n          </Menu.Item>\r\n        ))}\r\n        <SubMenu\r\n          key=\"SubMenu\"\r\n          icon={<UserOutlined />}\r\n          title={`${meData?.me?.first_name} ${meData?.me?.last_name}`}\r\n          style={{\r\n            float: 'right',\r\n          }}\r\n          className=\"profile-submenu\"\r\n        >\r\n          {/* <Menu.Item key=\"profile\">\r\n            <NavLink to=\"/profile\">\r\n              <ProfileOutlined /> My profile\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"bookmarks\">\r\n            <NavLink to=\"/clipped-notes\">\r\n              <BookOutlined /> Clipped notes\r\n            </NavLink>\r\n          </Menu.Item> */}\r\n          {submenus.map(submenu => (\r\n            <Menu.Item key={submenu.link}>\r\n              <NavLink to={submenu.link}>\r\n                <ProfileOutlined /> {submenu.label}\r\n              </NavLink>\r\n            </Menu.Item>\r\n          ))}\r\n          <Menu.Item key=\"setting:4\" onClick={() => onLogoutUser()}>\r\n            <LogoutOutlined /> Logout\r\n          </Menu.Item>\r\n        </SubMenu>\r\n\r\n        {/* <div\r\n          style={{\r\n            float: 'right',\r\n            // marginRight: '20px',\r\n          }}\r\n          // icon={<LogoutOutlined />}\r\n          // onClick={onLogoutUser}\r\n        >\r\n          <Popover\r\n            style={{ width: '250px' }}\r\n            content={\r\n              <div style={{ width: '150px' }}>\r\n                <NavLink to=\"/bookmarks\">\r\n                  <Button block type=\"text\">\r\n                    Bookmarks\r\n                  </Button>\r\n                </NavLink>\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <Button block type=\"text\">\r\n                  Logout\r\n                </Button>\r\n              </div>\r\n            }\r\n            // title=\"Title\"\r\n            trigger=\"click\"\r\n            placement=\"bottomRight\"\r\n            visible={open}\r\n            onVisibleChange={onClickAvatar}\r\n          >\r\n            <Button type=\"text\">\r\n              <Avatar icon={<UserOutlined />} />\r\n            </Button>\r\n          </Popover>\r\n        </div> */}\r\n        {/* <div style={{ textAlign: 'right' }}>\r\n        </div> */}\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport './Loader.less';\r\n\r\ninterface LoaderProps {\r\n  open?: boolean;\r\n}\r\n\r\nexport const Loader: React.FC<LoaderProps> = ({ open }) => {\r\n  return open ? (\r\n    <div className=\"loader-overlay\">\r\n      <div className=\"loader-container\">\r\n        <Spin size=\"large\" />\r\n        <div>Loading...</div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Breadcrumb as AntdBreadcrumb } from 'antd';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ninterface BreadcrumbProps {\r\n  menus: Array<any>;\r\n  submenus: Array<any>;\r\n}\r\n\r\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({ menus, submenus }) => {\r\n  const location: any = useLocation();\r\n  return (\r\n    <AntdBreadcrumb style={{ margin: '16px 0' }}>\r\n      <AntdBreadcrumb.Item>\r\n        {/* <a href=\"/\">Home</a> */}\r\n        Home\r\n      </AntdBreadcrumb.Item>\r\n      {location.pathname !== '/' && (\r\n        <AntdBreadcrumb.Item>\r\n          <a href={location.pathname}>\r\n            {!menus.some((menu: any) => menu.link === location.pathname)\r\n              ? submenus.find(menu => menu.link === location.pathname).label\r\n              : menus.find(menu => menu.link === location.pathname).label}\r\n          </a>\r\n        </AntdBreadcrumb.Item>\r\n      )}\r\n    </AntdBreadcrumb>\r\n  );\r\n};\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport { List as AntdList, Avatar, Button, Tag } from 'antd';\r\nimport {\r\n  // MessageOutlined,\r\n  // LikeOutlined,\r\n  // StarOutlined,\r\n  BookOutlined,\r\n  DeleteOutlined,\r\n  GithubOutlined,\r\n} from '@ant-design/icons';\r\nimport './List.less';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Empty } from '../';\r\n\r\ninterface ListProps {\r\n  listData?: any;\r\n  onClickBookmark?: Function;\r\n  articles?: any;\r\n  onChangePage?: any;\r\n  total?: number | undefined;\r\n  onDeleteBookmark?: Function;\r\n  page?: number;\r\n}\r\n\r\n// const listData: Array<any> = [];\r\n// for (let i = 0; i < 23; i++) {\r\n//   listData.push({\r\n//     href: 'https://ant.design',\r\n//     title: `ant design part ${i}`,\r\n//     avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n//     description:\r\n//       'Ant Design, a design language for background applications, is refined by Ant UED Team.',\r\n//     content:\r\n//       'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\r\n//   });\r\n// }\r\n\r\nexport const List: React.FC<ListProps> = ({\r\n  listData,\r\n  onClickBookmark,\r\n  articles,\r\n  onChangePage,\r\n  total,\r\n  onDeleteBookmark,\r\n  page,\r\n}) => {\r\n  const location = useLocation();\r\n  // const IconText = (iconProp: any) => (\r\n  //   <Space>\r\n  //     {React.createElement(iconProp.icon)}\r\n  //     {iconProp.text}\r\n  //   </Space>\r\n  // );\r\n\r\n  const bookmarked = (item: any) => {\r\n    return (\r\n      articles && articles.some((bookmark: any) => bookmark.idno == item.id)\r\n    );\r\n  };\r\n  // console.log(listData);\r\n\r\n  return (\r\n    <AntdList\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      pagination={\r\n        total && total > 10\r\n          ? {\r\n              onChange: page => onChangePage(page),\r\n              pageSize: 10,\r\n              total: total ? total : 0,\r\n              current: page,\r\n              pageSizeOptions: ['10'],\r\n            }\r\n          : false\r\n      }\r\n      locale={{\r\n        emptyText: (\r\n          <Empty\r\n            title=\"We can't found any data!\"\r\n            subtitle={\r\n              \"We can't found any articles/repositories that you bookmark.\"\r\n            }\r\n          />\r\n        ),\r\n      }}\r\n      dataSource={listData}\r\n      renderItem={(item: any) => {\r\n        return (\r\n          <AntdList.Item\r\n            key={item.id}\r\n            className=\"list-item\"\r\n            actions={[\r\n              // <IconText\r\n              //   icon={StarOutlined}\r\n              //   text={item?.public_reactions_count || 0}\r\n              //   key=\"list-vertical-star-o\"\r\n              // />,\r\n              // <IconText\r\n              //   icon={LikeOutlined}\r\n              //   text={item?.positive_reactions_count || 0}\r\n              //   key=\"list-vertical-like-o\"\r\n              // />,\r\n              // <IconText\r\n              //   icon={MessageOutlined}\r\n              //   text={`${item.comments_count ? item.comments_count : 0}`}\r\n              //   key=\"list-vertical-message\"\r\n              // />,\r\n              [\r\n                ...(item && item.tag_list\r\n                  ? item.tag_list.map((tag: any) => (\r\n                      <Tag color=\"geekblue-inverse\" key={tag}>\r\n                        {tag}\r\n                      </Tag>\r\n                    ))\r\n                  : []),\r\n              ],\r\n            ]}\r\n            extra={\r\n              location.pathname !== '/clipped-notes' ? (\r\n                <Button\r\n                  type=\"link\"\r\n                  {...(bookmarked(item)\r\n                    ? { className: 'btn-warning cursor-default' }\r\n                    : {})}\r\n                  icon={<BookOutlined />}\r\n                  {...(onClickBookmark && !bookmarked(item)\r\n                    ? { onClick: () => onClickBookmark(item) }\r\n                    : {})}\r\n                >\r\n                  {bookmarked(item) ? 'Saved' : 'Save to notes'}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  type=\"link\"\r\n                  icon={<DeleteOutlined />}\r\n                  danger\r\n                  onClick={() => {\r\n                    if (onDeleteBookmark) onDeleteBookmark(item.id);\r\n                  }}\r\n                  // {...(onClickBookmark\r\n                  //   ? { onClick: () => onClickBookmark(item) }\r\n                  //   : {})}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              )\r\n            }\r\n          >\r\n            <AntdList.Item.Meta\r\n              avatar={\r\n                item.avatar ? <Avatar src={item.avatar} /> : <GithubOutlined />\r\n              }\r\n              title={\r\n                <a\r\n                  href={item.href}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  className=\"list-title\"\r\n                >\r\n                  <strong>{item.title}</strong>\r\n                </a>\r\n              }\r\n              description={item.description}\r\n            />\r\n            {item.content}\r\n          </AntdList.Item>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default List;\r\n","import React from 'react';\r\nimport { Modal as AntModal, Button } from 'antd';\r\n\r\ninterface ModalProps {\r\n  toggleModal: Function;\r\n  onCancel: Function;\r\n  title?: string;\r\n  open: any;\r\n  content: string;\r\n}\r\n\r\nexport const Modal: React.FC<ModalProps> = ({\r\n  toggleModal,\r\n  onCancel,\r\n  title,\r\n  open,\r\n  content,\r\n}) => {\r\n  return (\r\n    <AntModal\r\n      {...(title ? { title: title } : {})}\r\n      visible={open}\r\n      onCancel={() => onCancel()}\r\n      footer={[\r\n        <Button onClick={() => toggleModal()} key=\"okay\">\r\n          OK\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <p>{content}</p>\r\n    </AntModal>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { Modal as AntdModal, Button } from 'antd';\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string;\r\n  content: string;\r\n  open: any;\r\n  onOkFunction: Function;\r\n  onCancelFunction: Function;\r\n}\r\n\r\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\r\n  title,\r\n  content,\r\n  open,\r\n  onOkFunction,\r\n  onCancelFunction,\r\n}) => {\r\n  //   const confirm = () => {\r\n  //     Modal.confirm({\r\n  //       title: title,\r\n  //       icon: <CloseCircleOutlined />,\r\n  //       content: 'Bla bla ...',\r\n  //       okText: 'Yes',\r\n  //       okType: 'danger',\r\n  //       onOk: () => onOkFunction(),\r\n  //       cancelText: 'Cancel',\r\n  //       onCancel: () => onCancelFunction()\r\n  //     });\r\n  //   };\r\n  // const thisFunc = () => {\r\n  //   console.log('this is onClick function...');\r\n  // };\r\n  return (\r\n    // <Space>\r\n    //   <Button onClick={() => confirm()}>Confirm</Button>\r\n    // </Space>\r\n    <AntdModal\r\n      {...(title ? { title: title } : {})}\r\n      visible={open}\r\n      onCancel={() => onCancelFunction()}\r\n      footer={[\r\n        <Button onClick={() => onCancelFunction()} key=\"cancel\">\r\n          Cancel\r\n        </Button>,\r\n        <Button onClick={() => onOkFunction()} key=\"okay\" danger>\r\n          Yes\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <p>{content}</p>\r\n    </AntdModal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React from 'react';\r\nimport './Empty.less';\r\nimport { Typography } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst emptyImg = `${process.env.REACT_APP_BASENAME}svgs/empty.svg`;\r\n\r\ninterface Empty {\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst Empty: React.FC<Empty> = ({ title, subtitle }) => {\r\n  return (\r\n    <div className=\"empty-data-container\">\r\n      <div className=\"emptyImg-container\">\r\n        <img src={emptyImg} alt=\"Empty data\" />\r\n        <div className=\"empty-text\">\r\n          <Title level={5}>{title ? title : 'No data found!'}</Title>\r\n          <Text type=\"secondary\">\r\n            {subtitle\r\n              ? subtitle\r\n              : \"We can't found any articles that you bookmark.\"}\r\n          </Text>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Empty;\r\n","import React from 'react';\r\nimport './PageLoader.less';\r\n\r\ninterface PageLoaderProps {}\r\nconst logoImg = `${process.env.REACT_APP_BASENAME}images/logo.png`;\r\n\r\nconst PageLoader: React.FC<PageLoaderProps> = ({}) => {\r\n  return (\r\n    <div className=\"page-loader-container\">\r\n      <div className=\"page-loader\">\r\n        <img src={logoImg} alt=\"CLIPNOTES\" />\r\n        <div className=\"sk-circle\">\r\n          <div className=\"sk-circle1 sk-child\"></div>\r\n          <div className=\"sk-circle2 sk-child\"></div>\r\n          <div className=\"sk-circle3 sk-child\"></div>\r\n          <div className=\"sk-circle4 sk-child\"></div>\r\n          <div className=\"sk-circle5 sk-child\"></div>\r\n          <div className=\"sk-circle6 sk-child\"></div>\r\n          <div className=\"sk-circle7 sk-child\"></div>\r\n          <div className=\"sk-circle8 sk-child\"></div>\r\n          <div className=\"sk-circle9 sk-child\"></div>\r\n          <div className=\"sk-circle10 sk-child\"></div>\r\n          <div className=\"sk-circle11 sk-child\"></div>\r\n          <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PageLoader;\r\n","import React, { useContext } from 'react';\r\nimport { Layout as AntdLayout } from 'antd';\r\nimport './Layout.less';\r\nimport {\r\n  GithubOutlined,\r\n  ReadOutlined,\r\n  ProfileOutlined,\r\n  BookOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  Breadcrumb,\r\n  ConfirmationModal,\r\n  Nav,\r\n  Footer,\r\n  Loader,\r\n} from '../../components';\r\nimport ModalContext from '../../context/ModalContext/ModalContext';\r\nimport LoaderContext from '../../context/LoaderContext/LoaderContext';\r\n\r\nconst { Content } = AntdLayout;\r\n// const { Paragraph, Text } = Typography;\r\n// const { TextArea } = Input;\r\n\r\n// const logoImg = `${process.env.REACT_APP_BASENAME}images/logo.png`;\r\n\r\nconst menus = [\r\n  // {\r\n  //   label: 'Home',\r\n  //   link: '/home',\r\n  //   icon: <HomeOutlined />,\r\n  // },\r\n  {\r\n    label: 'Repositories',\r\n    link: '/repositories',\r\n    icon: <GithubOutlined />,\r\n  },\r\n  {\r\n    label: 'Articles',\r\n    link: '/articles',\r\n    icon: <ReadOutlined />,\r\n  },\r\n];\r\n\r\nconst subMenus = [\r\n  {\r\n    link: '/profile',\r\n    label: 'Profile',\r\n    icon: <ProfileOutlined />,\r\n  },\r\n  {\r\n    link: '/clipped-notes',\r\n    label: 'Clipped notes',\r\n    icon: <BookOutlined />,\r\n  },\r\n];\r\n\r\nexport const Layout: React.FC<{}> = props => {\r\n  const modal: any = useContext(ModalContext);\r\n  const loader: any = useContext(LoaderContext);\r\n  return (\r\n    <div>\r\n      <Loader open={loader.open} />\r\n      <AntdLayout>\r\n        <ConfirmationModal open={modal.open} {...modal.modalConfig} />\r\n        <Nav menus={menus} submenus={subMenus} />\r\n        <Content\r\n          className=\"site-layout\"\r\n          style={{ padding: '0 50px', marginTop: 64 }}\r\n        >\r\n          <Breadcrumb menus={menus} submenus={subMenus} />\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 380 }}\r\n          >\r\n            {props.children}\r\n          </div>\r\n        </Content>\r\n      </AntdLayout>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useMeQuery } from '../../generated/graphql';\r\nimport Layout from '../../hoc/Layout/Layout';\r\nimport { Loader } from '../../components';\r\n\r\ninterface ProtectedRouteProps {\r\n  component: any;\r\n  path: string;\r\n  exact: boolean;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({\r\n  component: Component,\r\n  path,\r\n}) => {\r\n  const [{ data, fetching }] = useMeQuery();\r\n\r\n  if (fetching) {\r\n    // * Return loader if request is processing\r\n    return <Loader />;\r\n  } else if (!data?.me) {\r\n    // * Redirect to login when user not logged in\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  // * Return high order component if user already logged-in\r\n  return (\r\n    <Layout>\r\n      <Route path={path} component={Component} />\r\n    </Layout>\r\n  );\r\n};\r\nexport default ProtectedRoute;\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Layout as AntdLayout,\r\n  Typography,\r\n  Input,\r\n  // message as antdMessage,\r\n  notification,\r\n} from 'antd';\r\nimport {\r\n  SendOutlined,\r\n  FacebookOutlined,\r\n  TwitterOutlined,\r\n  GoogleOutlined,\r\n  LinkedinOutlined,\r\n} from '@ant-design/icons';\r\nimport { usePostFeedbackMutation } from '../../generated/graphql';\r\nimport './Footer.less';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst { Footer: AntdFooter } = AntdLayout;\r\nconst { Paragraph, Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst logoImg = `${process.env.REACT_APP_BASENAME}images/logo.png`;\r\n\r\n// interface FooterProps {}\r\n\r\nconst Footer: React.FC = () => {\r\n  const [message, setMessage] = useState<string>('');\r\n  const [, postFeedback] = usePostFeedbackMutation();\r\n  const [submitProcessing, setSubmitProcessing] = useState<boolean>(false);\r\n\r\n  const onChangeMessageHandler = (evt: any) => {\r\n    setMessage(evt.target.value);\r\n  };\r\n  const onSubmitFeedback = async (evt: any) => {\r\n    evt.preventDefault();\r\n    if (message === '' || message === null || message === undefined) {\r\n      return false;\r\n    }\r\n    setSubmitProcessing(true);\r\n    const result = await postFeedback({\r\n      message,\r\n    });\r\n    setSubmitProcessing(false);\r\n    setMessage('');\r\n    notification[\r\n      result?.data?.postFeedback?.code === 0 ? 'warning' : 'success'\r\n    ]({\r\n      message:\r\n        result?.data?.postFeedback?.code === 0\r\n          ? 'Oops! Your feedback was not sent.'\r\n          : 'Success!',\r\n      description: result?.data?.postFeedback?.message,\r\n    });\r\n    // if (result?.data?.postFeedback?.code === 0) {\r\n    //   // antdMessage.warning(result?.data?.postFeedback?.message);\r\n    //   return;\r\n    // }\r\n    // notification.success({\r\n    //   message: 'Success!',\r\n    //   description: result?.data?.postFeedback?.message,\r\n    // });\r\n  };\r\n  return (\r\n    <>\r\n      <AntdFooter style={{ textAlign: 'center' }}>\r\n        <div className=\"footer-container\">\r\n          <Row>\r\n            <Col span={8} xs={24} md={12} lg={8} className=\"center\">\r\n              <div className=\"column-container\">\r\n                <div className=\"footer-logo-container\">\r\n                  <div className=\"img-container margin-auto\">\r\n                    <img src={logoImg} alt=\"CLIPNOTES LOGO\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"clipnotes-footer-description\">\r\n                  <Paragraph>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Delectus quos dignissimos veniam ea, corporis repudiandae\r\n                    aperiam animi deserunt nobis nostrum numquam dicta adipisci\r\n                    sint quibusdam quidem itaque repellendus amet illum.\r\n                  </Paragraph>\r\n                  {/* <Paragraph>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                            Delectus quos dignissimos veniam ea, corporis repudiandae\r\n                            aperiam animi deserunt nobis nostrum numquam dicta adipisci\r\n                            sint quibusdam quidem itaque repellendus amet illum. Lorem\r\n                            ipsum dolor sit amet consectetur adipisicing elit. Delectus\r\n                            quos dignissimos veniam ea, corporis repudiandae aperiam\r\n                            animi deserunt nobis nostrum numquam dicta adipisci sint\r\n                            quibusdam quidem itaque repellendus amet illum.\r\n                        </Paragraph> */}\r\n                </div>\r\n                <div className=\"social-medias-container\">\r\n                  <Tooltip title=\"Facebook\">\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"default\"\r\n                      shape=\"circle\"\r\n                      icon={<FacebookOutlined />}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Twitter\">\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"default\"\r\n                      shape=\"circle\"\r\n                      icon={<TwitterOutlined />}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Gmail\">\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"default\"\r\n                      shape=\"circle\"\r\n                      icon={<GoogleOutlined />}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title=\"LinkedIn\">\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"default\"\r\n                      shape=\"circle\"\r\n                      icon={<LinkedinOutlined />}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col span={4} xs={24} md={12} lg={4}>\r\n              <div className=\"column-container footer-text-align\">\r\n                <div className=\"navigate-container\">\r\n                  <Text className=\"navigate-title\">Navigate</Text>\r\n                </div>\r\n                <div className=\"navigate-link\">\r\n                  <Text>\r\n                    <NavLink to=\"/repositories\">Repositories</NavLink>\r\n                  </Text>\r\n                </div>\r\n                <div className=\"navigate-link\">\r\n                  <Text>\r\n                    <NavLink to=\"/articles\">Articles</NavLink>\r\n                  </Text>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col span={12} xs={24} md={12} lg={12}>\r\n              <form onSubmit={onSubmitFeedback}>\r\n                <div className=\"column-container footer-text-align\">\r\n                  <div className=\"navigate-container\">\r\n                    <Text className=\"navigate-title\">Share your thoughts!</Text>\r\n                  </div>\r\n                  <div>\r\n                    <TextArea\r\n                      maxLength={200}\r\n                      rows={5}\r\n                      showCount={false}\r\n                      placeholder=\"Share me your thoughts about the clipnotes...\"\r\n                      onChange={(evt: any) => onChangeMessageHandler(evt)}\r\n                      value={message}\r\n                    />\r\n                  </div>\r\n                  <div className=\"submit-container\">\r\n                    <Button\r\n                      type=\"default\"\r\n                      icon={<SendOutlined />}\r\n                      // size=\"large\"\r\n                      htmlType=\"submit\"\r\n                      loading={submitProcessing}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </AntdFooter>\r\n      <div className=\"bottom-footer\">\r\n        <div className=\"app-name\">\r\n          &#169; {moment().format('YYYY')} CLIPNOTES\r\n        </div>\r\n        <div className=\"app-dev\">Developed by Lizandro Mayonado.</div>\r\n      </div>\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\nexport default Footer;\r\n"],"sourceRoot":""}