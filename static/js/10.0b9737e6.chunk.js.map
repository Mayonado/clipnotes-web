{"version":3,"sources":["pages/Bookmarks/Bookmarks.tsx"],"names":["TabPane","Bookmarks","modal","useContext","ModalContext","useGetUserArticlesQuery","data","fetching","useDeleteBookmarkMutation","deleteBookmark","useDeleteRepositoryMutation","deleteRepository","useGetRepositoriesQuery","repositoryData","fetchingRepository","onDeleteBookmark","id","a","result","hide","success","onDeleteRepository","toggleOnDeleteRepositoryModal","setModalConfig","title","content","onCancelFunction","onOkFunction","show","className","tabPosition","defaultActiveKey","tab","listData","getRepositories","total","length","getUserArticles","articles"],"mappings":"yVAaQA,E,IAAAA,QAIKC,EAAsC,SAAC,GAAQ,IAAD,uBACzD,IAAMC,EAAaC,qBAAWC,KAD2B,EAI5BC,cAJ4B,sBAIhDC,EAJgD,EAIhDA,KAAMC,EAJ0C,EAI1CA,SAJ0C,EAK9BC,cAAlBC,EALgD,sBAM5BC,cAApBC,EANgD,sBASrDC,cATqD,sBAQ/CC,EAR+C,EAQrDP,KAAgCQ,EARqB,EAQ/BP,SAkBpBQ,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACFR,EAAe,CAClCO,OAFqB,OACjBE,EADiB,OAIvBhB,EAAMiB,OACN,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAQZ,YAAZ,OAAI,EAAcG,gBAChB,IAAQW,QAAQ,qCANK,2CAAH,sDAWhBC,EAAkB,uCAAG,WAAOL,GAAP,iBAAAC,EAAA,sEAEJN,EAAiB,CACpCK,OAHuB,OAEnBE,EAFmB,OAMzBhB,EAAMiB,OACN,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAQZ,YAAZ,OAAI,EAAcK,kBAChB,IAAQS,QAAQ,wCARO,2CAAH,sDAYlBE,EAA6B,uCAAG,WAAON,GAAP,SAAAC,EAAA,sDACpCf,EAAMqB,eAAe,CACnBC,MAAO,oBACPC,QACE,+JACFC,iBAAkB,kBAAMxB,EAAMiB,QAC9BQ,aAAc,kBAAMN,EAAmBL,MAEzCd,EAAM0B,OAR8B,2CAAH,sDAWnC,OACE,gCACE,mBAAYC,UAAU,mBAAmBL,MAAM,cAC/C,sBACA,oBAAMM,YAAY,OAAOC,iBAAiB,IAA1C,UAaE,cAAC/B,EAAD,CAASgC,IAAI,eAAb,SACE,cAAC,IAAD,CACEC,SACGnB,EAAuD,GAAxD,OAAsBD,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAgBqB,gBAExCC,MAAK,OAAEtB,QAAF,IAAEA,GAAF,UAAEA,EAAgBqB,uBAAlB,aAAE,EAAiCE,OACxCrB,iBAAkBO,KANU,KAWhC,cAACtB,EAAD,CAASgC,IAAI,WAAb,SACE,cAAC,IAAD,CACEC,SAAW1B,EAA6C,GAA9C,OAAYD,QAAZ,IAAYA,GAAZ,UAAYA,EAAM+B,uBAAlB,aAAY,EAAuBC,SAC7CH,MAAK,OAAE7B,QAAF,IAAEA,GAAF,UAAEA,EAAM+B,uBAAR,iBAAE,EAAuBC,gBAAzB,aAAE,EAAiCF,OACxCrB,iBAjFkB,SAACC,GAK3Bd,EAAMqB,eAAe,CACnBC,MAAO,oBACPC,QACE,wJACFC,iBAAkB,kBAAMxB,EAAMiB,QAC9BQ,aAAc,kBAAMZ,EAAiBC,MAEvCd,EAAM0B,WAiE0B,YAarB3B","file":"static/js/10.0b9737e6.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { PageHeader, Tabs, Divider, message } from 'antd';\r\nimport { List } from '../../components';\r\nimport {\r\n  useGetUserArticlesQuery,\r\n  useDeleteBookmarkMutation,\r\n  useGetRepositoriesQuery,\r\n  useDeleteRepositoryMutation,\r\n} from '../../generated/graphql';\r\n\r\nimport ModalContext from '../../context/ModalContext/ModalContext';\r\n// import { useEffect } from 'react';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface BookmarksProps {}\r\n\r\nexport const Bookmarks: React.FC<BookmarksProps> = ({}) => {\r\n  const modal: any = useContext(ModalContext);\r\n  // const [repoId, setRepoId] = useState<number>(0);\r\n  // const [articleId, setArticleId] = useState<number>(0);\r\n  const [{ data, fetching }] = useGetUserArticlesQuery();\r\n  const [, deleteBookmark] = useDeleteBookmarkMutation();\r\n  const [, deleteRepository] = useDeleteRepositoryMutation();\r\n  const [\r\n    { data: repositoryData, fetching: fetchingRepository },\r\n  ] = useGetRepositoriesQuery();\r\n\r\n  const toggleOnDeleteModal = (id: any) => {\r\n    // setOpenConfirmation({\r\n    //   show: !openConfirmation.show,\r\n    //   id: id,\r\n    // });\r\n    modal.setModalConfig({\r\n      title: 'Are you sure you?',\r\n      content:\r\n        'A small chance of possibility for this article to appear again in the trending list. Removing this article will delete it permanently from your list.',\r\n      onCancelFunction: () => modal.hide(),\r\n      onOkFunction: () => onDeleteBookmark(id),\r\n    });\r\n    modal.show();\r\n  };\r\n\r\n  const onDeleteBookmark = async (id: number) => {\r\n    const result = await deleteBookmark({\r\n      id,\r\n    });\r\n    modal.hide();\r\n    if (result?.data?.deleteBookmark) {\r\n      message.success('Article was successfully deleted.');\r\n    }\r\n    // setArticleId();\r\n  };\r\n\r\n  const onDeleteRepository = async (id: any) => {\r\n    // console.log('REPO ID', repoId);\r\n    const result = await deleteRepository({\r\n      id,\r\n    });\r\n\r\n    modal.hide();\r\n    if (result?.data?.deleteRepository) {\r\n      message.success('Repository was successfully deleted.');\r\n    }\r\n  };\r\n\r\n  const toggleOnDeleteRepositoryModal = async (id: any) => {\r\n    modal.setModalConfig({\r\n      title: 'Are you sure you?',\r\n      content:\r\n        'A small chance of possibility for theis repository to appear again in the trending list. Removing this repository will delete it permanently from your list.',\r\n      onCancelFunction: () => modal.hide(),\r\n      onOkFunction: () => onDeleteRepository(id),\r\n    });\r\n    modal.show();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader className=\"site-page-header\" title=\"Bookmarks\" />\r\n      <Divider />\r\n      <Tabs tabPosition=\"left\" defaultActiveKey=\"1\">\r\n        {/* <ConfirmationModal\r\n          title=\"Are you sure you want to delete this bookmark?\"\r\n          content=\"Once you delete this article on your bookmark possibly you can't find it on list of articles.\"\r\n          onOkFunction={() => onDeleteBookmark()}\r\n          onCancelFunction={() =>\r\n            setOpenConfirmation({\r\n              show: false,\r\n              id: null,\r\n            })\r\n          }\r\n          open={openConfirmation.show}\r\n        /> */}\r\n        <TabPane tab=\"Repositories\" key=\"1\">\r\n          <List\r\n            listData={\r\n              !fetchingRepository ? repositoryData?.getRepositories : []\r\n            }\r\n            total={repositoryData?.getRepositories?.length}\r\n            onDeleteBookmark={toggleOnDeleteRepositoryModal}\r\n            // onClickBookmark={onClickBookmark}\r\n            // bookmarks={bookmarks?.getUserBookmarks?.bookmarks}\r\n          />\r\n        </TabPane>\r\n        <TabPane tab=\"Articles\" key=\"2\">\r\n          <List\r\n            listData={!fetching ? data?.getUserArticles?.articles : []}\r\n            total={data?.getUserArticles?.articles?.length}\r\n            onDeleteBookmark={toggleOnDeleteModal}\r\n            // onClickBookmark={onClickBookmark}\r\n            // bookmarks={bookmarks?.getUserBookmarks?.bookmarks}\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\nexport default Bookmarks;\r\n"],"sourceRoot":""}