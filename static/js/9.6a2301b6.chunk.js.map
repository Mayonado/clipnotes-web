{"version":3,"sources":["pages/Bookmarks/Bookmarks.tsx"],"names":["TabPane","Title","Bookmarks","modal","useContext","ModalContext","useGetUserArticlesQuery","data","fetching","useDeleteBookmarkMutation","deleteBookmark","useDeleteRepositoryMutation","deleteRepository","useGetRepositoriesQuery","repositoryData","fetchingRepository","onDeleteBookmark","id","a","result","hide","success","message","description","onDeleteRepository","toggleOnDeleteRepositoryModal","setModalConfig","title","content","onCancelFunction","onOkFunction","show","className","level","style","color","tabPosition","defaultActiveKey","tab","listData","getRepositories","total","length","getUserArticles","articles","map","article","author","tag_list","JSON","parse","tags"],"mappings":"gYAqBQA,E,IAAAA,QACAC,E,IAAAA,MAEKC,EAA0B,SAAC,GAAQ,IAAD,yBAC7C,IAAMC,EAAaC,qBAAWC,KADe,EAIhBC,cAJgB,sBAIpCC,EAJoC,EAIpCA,KAAMC,EAJ8B,EAI9BA,SAJ8B,EAKlBC,cAAlBC,EALoC,sBAMhBC,cAApBC,EANoC,sBASzCC,cATyC,sBAQnCC,EARmC,EAQzCP,KAAgCQ,EARS,EAQnBP,SAkBpBQ,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACFR,EAAe,CAClCO,OAFqB,OACjBE,EADiB,OAIvBhB,EAAMiB,OACN,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAQZ,YAAZ,OAAI,EAAcG,gBAEhB,IAAaW,QAAQ,CACnBC,QAAS,UACTC,YACE,8DAViB,2CAAH,sDAgBhBC,EAAkB,uCAAG,WAAOP,GAAP,iBAAAC,EAAA,sEAEJN,EAAiB,CACpCK,OAHuB,OAEnBE,EAFmB,OAMzBhB,EAAMiB,OACN,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAQZ,YAAZ,OAAI,EAAcK,kBAEhB,IAAaS,QAAQ,CACnBC,QAAS,UACTC,YACE,iEAZmB,2CAAH,sDAiBlBE,EAA6B,uCAAG,WAAOR,GAAP,SAAAC,EAAA,sDACpCf,EAAMuB,eAAe,CACnBC,MAAO,oBACPC,QACE,+JACFC,iBAAkB,kBAAM1B,EAAMiB,QAC9BU,aAAc,kBAAMN,EAAmBP,MAEzCd,EAAM4B,OAR8B,2CAAH,sDAWnC,OACE,gCAEE,sBAAKC,UAAU,aAAf,UACE,cAAC/B,EAAD,CAAOgC,MAAO,EAAd,2BACA,uBAAMC,MAAO,CAAEC,MAAO,uBAAtB,qEAC+D,UAGjE,sBACA,oBACEC,YAAY,OACZC,iBAAiB,IACjBL,UAAU,mBAHZ,UAiBE,cAAChC,EAAD,CACEsC,IAAI,eAEJN,UAAU,oCAHZ,SAKE,cAAC,IAAD,CACEO,SACGxB,EAAuD,GAAxD,OAAsBD,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAgB0B,gBAExCC,MAAK,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAgB0B,uBAAlB,aAAE,EAAiCE,OACxC1B,iBAAkBS,KARhB,KAaN,cAACzB,EAAD,CACEsC,IAAI,WAEJN,UAAU,gCAHZ,SAKE,cAAC,IAAD,CACEO,SACG/B,EAQG,GARJ,OACID,QADJ,IACIA,GADJ,UACIA,EAAMoC,uBADV,iBACI,EAAuBC,gBAD3B,aACI,EAAiCC,KAAI,SAAAC,GACnC,OAAO,2BACFA,GADL,IAEEvB,YAAauB,EAAQC,OACrBC,SAAUC,KAAKC,MAAMJ,EAAQK,WAKvCV,MAAK,OAAElC,QAAF,IAAEA,GAAF,UAAEA,EAAMoC,uBAAR,iBAAE,EAAuBC,gBAAzB,aAAE,EAAiCF,OACxC1B,iBAvHkB,SAACC,GAK3Bd,EAAMuB,eAAe,CACnBC,MAAO,oBACPC,QACE,wJACFC,iBAAkB,kBAAM1B,EAAMiB,QAC9BU,aAAc,kBAAMd,EAAiBC,MAEvCd,EAAM4B,WA2FI,YAyBC7B","file":"static/js/9.6a2301b6.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  // PageHeader,\r\n  Tabs,\r\n  Divider,\r\n  // message,\r\n  Typography,\r\n  notification,\r\n} from 'antd';\r\nimport { List } from '../../components';\r\nimport {\r\n  useGetUserArticlesQuery,\r\n  useDeleteBookmarkMutation,\r\n  useGetRepositoriesQuery,\r\n  useDeleteRepositoryMutation,\r\n} from '../../generated/graphql';\r\n\r\nimport ModalContext from '../../context/ModalContext/ModalContext';\r\nimport './Bookmarks.less';\r\n// import { useEffect } from 'react';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Title } = Typography;\r\n\r\nexport const Bookmarks: React.FC<{}> = ({}) => {\r\n  const modal: any = useContext(ModalContext);\r\n  // const [repoId, setRepoId] = useState<number>(0);\r\n  // const [articleId, setArticleId] = useState<number>(0);\r\n  const [{ data, fetching }] = useGetUserArticlesQuery();\r\n  const [, deleteBookmark] = useDeleteBookmarkMutation();\r\n  const [, deleteRepository] = useDeleteRepositoryMutation();\r\n  const [\r\n    { data: repositoryData, fetching: fetchingRepository },\r\n  ] = useGetRepositoriesQuery();\r\n\r\n  const toggleOnDeleteModal = (id: any) => {\r\n    // setOpenConfirmation({\r\n    //   show: !openConfirmation.show,\r\n    //   id: id,\r\n    // });\r\n    modal.setModalConfig({\r\n      title: 'Are you sure you?',\r\n      content:\r\n        'A small chance of possibility for this article to appear again in the trending list. Removing this article will delete it permanently from your list.',\r\n      onCancelFunction: () => modal.hide(),\r\n      onOkFunction: () => onDeleteBookmark(id),\r\n    });\r\n    modal.show();\r\n  };\r\n\r\n  const onDeleteBookmark = async (id: number) => {\r\n    const result = await deleteBookmark({\r\n      id,\r\n    });\r\n    modal.hide();\r\n    if (result?.data?.deleteBookmark) {\r\n      // message.success('Article was successfully deleted.');\r\n      notification.success({\r\n        message: 'Success',\r\n        description:\r\n          'Article was successfully removed from your clipped notes.',\r\n      });\r\n    }\r\n    // setArticleId();\r\n  };\r\n\r\n  const onDeleteRepository = async (id: any) => {\r\n    // console.log('REPO ID', repoId);\r\n    const result = await deleteRepository({\r\n      id,\r\n    });\r\n\r\n    modal.hide();\r\n    if (result?.data?.deleteRepository) {\r\n      // message.success('Repository was successfully deleted.');\r\n      notification.success({\r\n        message: 'Success',\r\n        description:\r\n          'Repository was successfully removed from your clipped notes.',\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleOnDeleteRepositoryModal = async (id: any) => {\r\n    modal.setModalConfig({\r\n      title: 'Are you sure you?',\r\n      content:\r\n        'A small chance of possibility for theis repository to appear again in the trending list. Removing this repository will delete it permanently from your list.',\r\n      onCancelFunction: () => modal.hide(),\r\n      onOkFunction: () => onDeleteRepository(id),\r\n    });\r\n    modal.show();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <PageHeader className=\"site-page-header\" title=\"Bookmarks\" /> */}\r\n      <div className=\"page-title\">\r\n        <Title level={3}>Clipped notes</Title>\r\n        <span style={{ color: 'rgba(0, 0, 0, 0.45)' }}>\r\n          {`List of repositories/articles you've save on your notes.`}{' '}\r\n        </span>\r\n      </div>\r\n      <Divider />\r\n      <Tabs\r\n        tabPosition=\"left\"\r\n        defaultActiveKey=\"1\"\r\n        className=\"clippednotes-tab\"\r\n      >\r\n        {/* <ConfirmationModal\r\n          title=\"Are you sure you want to delete this bookmark?\"\r\n          content=\"Once you delete this article on your bookmark possibly you can't find it on list of articles.\"\r\n          onOkFunction={() => onDeleteBookmark()}\r\n          onCancelFunction={() =>\r\n            setOpenConfirmation({\r\n              show: false,\r\n              id: null,\r\n            })\r\n          }\r\n          open={openConfirmation.show}\r\n        /> */}\r\n        <TabPane\r\n          tab=\"Repositories\"\r\n          key=\"1\"\r\n          className=\"clippednotes-tab repositories-tab\"\r\n        >\r\n          <List\r\n            listData={\r\n              !fetchingRepository ? repositoryData?.getRepositories : []\r\n            }\r\n            total={repositoryData?.getRepositories?.length}\r\n            onDeleteBookmark={toggleOnDeleteRepositoryModal}\r\n            // onClickBookmark={onClickBookmark}\r\n            // bookmarks={bookmarks?.getUserBookmarks?.bookmarks}\r\n          />\r\n        </TabPane>\r\n        <TabPane\r\n          tab=\"Articles\"\r\n          key=\"2\"\r\n          className=\"clippednotes-tab articles-tab\"\r\n        >\r\n          <List\r\n            listData={\r\n              !fetching\r\n                ? data?.getUserArticles?.articles?.map(article => {\r\n                    return {\r\n                      ...article,\r\n                      description: article.author,\r\n                      tag_list: JSON.parse(article.tags),\r\n                    };\r\n                  })\r\n                : []\r\n            }\r\n            total={data?.getUserArticles?.articles?.length}\r\n            onDeleteBookmark={toggleOnDeleteModal}\r\n            // onClickBookmark={onClickBookmark}\r\n            // bookmarks={bookmarks?.getUserBookmarks?.bookmarks}\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\nexport default Bookmarks;\r\n"],"sourceRoot":""}