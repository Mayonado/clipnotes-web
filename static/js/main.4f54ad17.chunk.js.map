{"version":3,"sources":["context/ModalContext/ModalContext.tsx","index.less","pages/Login/Login.less","pages/Login/Login.tsx","utils/betterUpdateQuery.ts","utils/createUrqlClient.ts","hoc/Layout/Layout.less","hoc/Layout/Layout.tsx","components/ProtectedRoute/ProtectedRoute.tsx","App/App.tsx","App/App.less","reportWebVitals.ts","override.less","index.tsx","generated/graphql.tsx","components/Nav/Nav.less","components/Nav/Nav.tsx","components/Loader/Loader.tsx","components/Loader/Loader.less","components/Breadcrumb/Breadcrumb.tsx","components/List/List.tsx","components/List/List.less","components/Modal/Modal.tsx","components/ConfirmationModal/ConfirmationModal.tsx","components/Empty/Empty.less","components/Empty/Empty.tsx"],"names":["ModalContext","createContext","ModalProvider","children","useState","open","setOpen","title","content","onCancelFunction","onOkFunction","modalConfig","setModalConfig","Provider","value","show","hide","logoImg","Typography","Title","process","Login","history","email","tokenId","useLoginMutation","login","useMeQuery","me","data","fetching","to","onSuccessGoogleLogin","response","a","profileObj","accessToken","options","className","src","clientId","onSuccess","onFailure","render","renderProps","type","block","size","icon","GoogleOutlined","disabled","onClick","buttonText","cookiePolicy","betterUpdateQuery","cache","qi","result","fn","updateQuery","createUrqlClient","createClient","url","fetchOptions","credentials","exchanges","dedupExchange","cacheExchange","updates","Mutation","_result","args","info","query","MeDocument","errors","console","log","user","patchProfile","postBookmark","GetUserArticlesDocument","res","datas","getUserArticles","articles","push","deleteBookmark","newDataSet","filter","article","id","postRepository","getRepositories","gql","deleteRepository","repoIndex","findIndex","repo","splice","fetchExchange","Content","AntdLayout","Footer","menus","label","link","GithubOutlined","ReadOutlined","Layout","props","modal","useContext","style","padding","marginTop","minHeight","textAlign","moment","format","ProtectedRoute","Component","component","path","Repositories","React","lazy","Articles","Bookmarks","Profile","Page404","App","fallback","basename","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","ArticleFragmentDoc","InterestFragmentDoc","LanguageFragmentDoc","RepositoryFragmentDoc","UserFragmentDoc","PostBookmarkDocument","usePostBookmarkMutation","Urql","DeleteBookmarkDocument","useDeleteBookmarkMutation","DeleteRepositoryDocument","useDeleteRepositoryMutation","LoginDocument","LogoutDocument","useLogoutMutation","PatchProfileDocument","usePatchProfileMutation","PostRepositoryDocument","usePostRepositoryMutation","useGetUserArticlesQuery","GetLanguageDocument","useGetLanguageQuery","GetRepositoriesDocument","useGetRepositoriesQuery","Header","SubMenu","Menu","Nav","location","useLocation","logout","meData","onLogoutUser","window","href","position","zIndex","width","mode","defaultSelectedKeys","some","menu","pathname","activeKey","map","Item","UserOutlined","first_name","last_name","float","ProfileOutlined","BookOutlined","LogoutOutlined","Loader","Breadcrumb","margin","find","List","listData","onClickBookmark","onChangePage","total","onDeleteBookmark","page","IconText","iconProp","createElement","text","itemLayout","pagination","onChange","pageSize","current","locale","emptyText","subtitle","dataSource","renderItem","item","actions","StarOutlined","public_reactions_count","LikeOutlined","positive_reactions_count","MessageOutlined","comments_count","tag_list","tag","color","extra","bookmark","idno","DeleteOutlined","danger","Meta","avatar","target","description","Modal","toggleModal","onCancel","visible","footer","ConfirmationModal","Text","emptyImg","Empty","level"],"mappings":"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","file":"static/js/main.4f54ad17.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { Modal as AntdModal, Button, Space } from 'antd';\r\n\r\nconst ModalContext: any = createContext(null);\r\nexport const ModalProvider: React.FC<{}> = ({ children }) => {\r\n  const [open, setOpen] = useState<Boolean>(false);\r\n  const [modalConfig, setModalConfig] = useState({\r\n    title: null,\r\n    content: null,\r\n    onCancelFunction: () => {},\r\n    onOkFunction: () => {},\r\n  });\r\n\r\n  const show = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const hide = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        open,\r\n        show,\r\n        hide,\r\n        setModalConfig,\r\n        modalConfig,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalContext;\r\n","export default __webpack_public_path__ + \"static/media/index.69e3f89d.less\";","export default __webpack_public_path__ + \"static/media/Login.79ae6a34.less\";","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Checkbox, Row, Col, Typography } from 'antd';\r\nimport axios from 'axios';\r\nimport './Login.less';\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  GoogleOutlined,\r\n  LoginOutlined,\r\n} from '@ant-design/icons';\r\nimport { Input as InputField, Loader } from '../../components';\r\n\r\nimport { updateObject } from '../../utils';\r\nimport { useLoginMutation, useMeQuery } from '../../generated/graphql';\r\nimport { Redirect } from 'react-router-dom';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nconst { Title } = Typography;\r\n\r\ninterface LoginProps {\r\n  history: any;\r\n}\r\n\r\nconst logoImg = `${process.env.REACT_APP_BASENAME}images/logo.png`;\r\n\r\nexport const Login: React.FC<LoginProps> = ({ history }) => {\r\n  const [form, setForm] = useState({\r\n    email: null,\r\n    tokenId: null,\r\n  });\r\n\r\n  const [, login] = useLoginMutation();\r\n  const [{ data: me, fetching }] = useMeQuery();\r\n\r\n  if (!fetching) {\r\n    if (me?.me) {\r\n      return <Redirect to=\"/repositories\" />;\r\n    }\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n\r\n  // const OnFieldChange = (evt: any, key: any) => {\r\n  //   const updatedForm: any = updateObject(form, {\r\n  //     [key]: evt.target.value,\r\n  //   });\r\n\r\n  //   setForm(updatedForm);\r\n  // };\r\n\r\n  // const onSubmitLoginForm = async () => {\r\n  //   const result = await login({ options: form });\r\n  //   console.log(result);\r\n  // };\r\n\r\n  const onSuccessGoogleLogin = async (response: any) => {\r\n    const { tokenId, profileObj, accessToken } = response;\r\n    // setForm({\r\n    //   email: profileObj.email,\r\n    //   tokenId,\r\n    // });\r\n\r\n    login({\r\n      options: {\r\n        email: profileObj.email,\r\n        tokenId,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onFailedGoogleLogin = () => {};\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-header\"></div>\r\n      <div className=\"login-form-container\">\r\n        <div className=\"logo-container\">\r\n          <img src={logoImg} />\r\n          {/* <Title level={4}>Clip Book</Title> */}\r\n        </div>\r\n        <div className=\"login-google\">\r\n          <div className=\"login-note\">\r\n            Please sign-in using your google account.\r\n          </div>\r\n          <div className=\"btn-container\">\r\n            {/* <Button\r\n              type=\"primary\"\r\n              // danger\r\n              block\r\n              size=\"large\"\r\n              icon={<GoogleOutlined />}\r\n            >\r\n              Login via google\r\n            </Button> */}\r\n            <GoogleLogin\r\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID as any}\r\n              onSuccess={onSuccessGoogleLogin}\r\n              onFailure={onFailedGoogleLogin}\r\n              render={renderProps => (\r\n                // <Button\r\n                // \tonClick={renderProps.onClick}\r\n                // \tclassName=\"google-button full-button\"\r\n                // \tdisabled={renderProps.disabled}\r\n                // >\r\n                // \t<div className=\"google-button-logo\">\r\n                // \t\t<img\r\n                // \t\t\tsrc={googleLogo}\r\n                // \t\t\talt=\"Google Logo\"\r\n                // \t\t/>\r\n                // \t</div>\r\n                // \t<div\r\n                // \t\tstyle={{ paddingLeft: '50px' }}\r\n                // \t>\r\n                // \t\tLogin with Google account\r\n                // \t</div>\r\n                // </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  // danger\r\n                  block\r\n                  size=\"large\"\r\n                  icon={<GoogleOutlined />}\r\n                  disabled={renderProps.disabled}\r\n                  onClick={renderProps.onClick}\r\n                >\r\n                  Sign in with google\r\n                </Button>\r\n              )}\r\n              buttonText=\"Login\"\r\n              cookiePolicy={'single_host_origin'}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"login-footer\">C</div>\r\n    </div>\r\n    // <div className=\"login-container\">\r\n    //   <Row>\r\n    //     <Col span={6} offset={9}>\r\n    //       <Form\r\n    //         name=\"normal_login\"\r\n    //         className=\"login-form\"\r\n    //         initialValues={{ remember: true }}\r\n    //         onFinish={onSubmitLoginForm}\r\n    //       >\r\n    //         <InputField\r\n    //           label=\"Username\"\r\n    //           name=\"username\"\r\n    //           rules={{ required: true, message: 'Please input your username' }}\r\n    //           type=\"input\"\r\n    //           value={form.username}\r\n    //           onChange={evt => OnFieldChange(evt, 'username')}\r\n    //           maxLength={20}\r\n    //           autoFocus\r\n    //         />\r\n    //         <InputField\r\n    //           label=\"Password\"\r\n    //           name=\"password\"\r\n    //           width=\"100%\"\r\n    //           type=\"password\"\r\n    //           rules={{ required: true, message: 'Please input your password' }}\r\n    //           value={form.password}\r\n    //           onChange={evt => OnFieldChange(evt, 'password')}\r\n    //           maxLength={20}\r\n    //         />\r\n    //         <Form.Item>\r\n    //           <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n    //             <Checkbox>Remember me</Checkbox>\r\n    //           </Form.Item>\r\n    //         </Form.Item>\r\n\r\n    //         <Form.Item>\r\n    //           <Button\r\n    //             type=\"primary\"\r\n    //             block\r\n    //             size=\"large\"\r\n    //             icon={<LoginOutlined />}\r\n    //             htmlType=\"submit\"\r\n    //           >\r\n    //             Login\r\n    //           </Button>\r\n    //         </Form.Item>\r\n    //         <Form.Item>\r\n    //           <Button\r\n    //             type=\"primary\"\r\n    //             danger\r\n    //             block\r\n    //             size=\"large\"\r\n    //             icon={<GoogleOutlined />}\r\n    //           >\r\n    //             Login via google\r\n    //           </Button>\r\n    //         </Form.Item>\r\n    //       </Form>\r\n    //     </Col>\r\n    //   </Row>\r\n    // </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import { Cache, QueryInput } from '@urql/exchange-graphcache';\r\n\r\nexport function betterUpdateQuery<Result, Query>(\r\n  cache: Cache,\r\n  qi: QueryInput,\r\n  result: any,\r\n  fn: (r: Result, q: Query) => Query\r\n) {\r\n  return cache.updateQuery(qi, data => fn(result, data as any) as any);\r\n}\r\n","import { cacheExchange } from '@urql/exchange-graphcache';\r\nimport { createClient, dedupExchange, fetchExchange } from 'urql';\r\nimport {\r\n  GetUserArticlesDocument,\r\n  GetUserArticlesQuery,\r\n  LoginMutation,\r\n  MeDocument,\r\n  MeQuery,\r\n  PostBookmarkMutation,\r\n  DeleteBookmarkMutation,\r\n  PatchProfileMutation,\r\n  GetRepositoriesQueryVariables,\r\n} from '../generated/graphql';\r\nimport { betterUpdateQuery } from './betterUpdateQuery';\r\nimport gql from 'graphql-tag';\r\n\r\nexport const createUrqlClient = createClient({\r\n  url: `${process.env.REACT_APP_API_URL}/graphql`,\r\n  fetchOptions: {\r\n    credentials: 'include',\r\n  },\r\n  exchanges: [\r\n    dedupExchange,\r\n    cacheExchange({\r\n      updates: {\r\n        Mutation: {\r\n          //   logout: (_result, args, cache, info) => {\r\n          //     betterUpdateQuery<LogoutMutation, MeQuery>(\r\n          //       cache,\r\n          //       { query: MeDocument },\r\n          //       _result,\r\n          //       () => ({ me: null })\r\n          //     );\r\n          //   },\r\n          login: (_result, args, cache, info) => {\r\n            betterUpdateQuery<LoginMutation, MeQuery>(\r\n              cache,\r\n              { query: MeDocument },\r\n              _result,\r\n              (result, query) => {\r\n                if (result.login.errors) {\r\n                  return query;\r\n                } else {\r\n                  console.log(result.login.user);\r\n                  return {\r\n                    me: result.login.user,\r\n                  };\r\n                }\r\n              }\r\n            );\r\n          },\r\n          patchProfile: (_result, args, cache, info) => {\r\n            betterUpdateQuery<PatchProfileMutation, MeQuery>(\r\n              cache,\r\n              { query: MeDocument },\r\n              _result,\r\n              (result, query) => {\r\n                console.log(result);\r\n                return {\r\n                  me: result.patchProfile.user,\r\n                };\r\n              }\r\n            );\r\n          },\r\n\r\n          postBookmark: (_result: any, args, cache, info) => {\r\n            betterUpdateQuery<PostBookmarkMutation, GetUserArticlesQuery>(\r\n              cache,\r\n              { query: GetUserArticlesDocument },\r\n              _result,\r\n              (res: any, query: any) => {\r\n                if (_result?.postBookmark.data) {\r\n                  cache.updateQuery(\r\n                    { query: GetUserArticlesDocument },\r\n                    (datas: any) => {\r\n                      datas.getUserArticles.articles.push(\r\n                        _result?.postBookmark?.data\r\n                      );\r\n                      return datas;\r\n                    }\r\n                  );\r\n                }\r\n                return {\r\n                  getUserArticles: {\r\n                    articles: [\r\n                      ...query.getUserArticles.articles,\r\n                      res.postBookmark.data,\r\n                    ],\r\n                  },\r\n                };\r\n              }\r\n            );\r\n          },\r\n\r\n          deleteBookmark: (_result: any, args, cache, info) => {\r\n            betterUpdateQuery<DeleteBookmarkMutation, GetUserArticlesQuery>(\r\n              cache,\r\n              { query: GetUserArticlesDocument },\r\n              _result,\r\n              (res: any, query: any) => {\r\n                if (_result?.deleteBookmark?.data) {\r\n                  cache.updateQuery(\r\n                    { query: GetUserArticlesDocument },\r\n                    (datas: any) => {\r\n                      // datas.getUserArticles.articles.push(\r\n                      //   _result?.postBookmark?.data\r\n                      // );\r\n                      const newDataSet = datas.getUserArticles.articles.filter(\r\n                        (article: any) =>\r\n                          article.id !== _result?.deleteBookmark?.data?.id\r\n                      );\r\n                      datas.getUserArticles.articles = newDataSet;\r\n                      return datas;\r\n                    }\r\n                  );\r\n                }\r\n                return {\r\n                  getUserArticles: {\r\n                    articles: query.getUserArticles.articles.filter(\r\n                      (article: any) =>\r\n                        article.id !== _result?.deleteBookmark?.data?.id\r\n                    ),\r\n                  },\r\n                };\r\n              }\r\n            );\r\n          },\r\n\r\n          postRepository: (_result: any, args, cache, info) => {\r\n            // cache.invalidate({\r\n            //   __typename: 'GetRepositories',\r\n            // });\r\n            // TODO invalidate cache\r\n            // const allFields = cache.inspectFields('Query');\r\n            // console.log(allFields);\r\n            // const fieldInfos = allFields.filter(\r\n            //   info => info.fieldName === 'getRepositories'\r\n            // );\r\n            // console.log('Field infos', fieldInfos);\r\n            // fieldInfos.forEach(fi => {\r\n            //   cache.invalidate('Query', 'getRepositories', fi.arguments || {});\r\n            // });\r\n            const getRepositories = gql`\r\n              query GetRepositories {\r\n                getRepositories {\r\n                  ...GetRepositoriesQueryVariables\r\n                }\r\n              }\r\n            `;\r\n\r\n            cache.updateQuery({ query: getRepositories }, (data: any) => {\r\n              data?.getRepositories?.push(_result?.postRepository);\r\n              return data;\r\n            });\r\n          },\r\n\r\n          deleteRepository: (_result: any, args, cache, info) => {\r\n            const getRepositories = gql`\r\n              query GetRepositories {\r\n                getRepositories {\r\n                  id\r\n                  title\r\n                  description\r\n                  href\r\n                }\r\n              }\r\n            `;\r\n\r\n            cache.updateQuery({ query: getRepositories }, (data: any) => {\r\n              // console.log(data?.getRepositories);\r\n              // const repositories = data?.getRepositories?.filter(\r\n              //   (repo: any) => repo.id !== args?.id\r\n              // );\r\n              // console.log(repositories);\r\n              const repoIndex = data?.getRepositories?.findIndex(\r\n                (repo: any) => repo.id === args?.id\r\n              );\r\n              data?.getRepositories?.splice(repoIndex, 1);\r\n              return data;\r\n            });\r\n          },\r\n\r\n          // postBookmark: (_result, args, cache, info) => {\r\n          //   betterUpdateQuery<PostBookmarkMutation, GetUserBookmarksQuery>)\r\n          //   cache,\r\n          //   { query:  GetUserBookmarksDocument },\r\n          //   _result,\r\n          //   (result, query) => {\r\n          //   }\r\n          // }\r\n          //   register: (_result, args, cache, info) => {\r\n          //     betterUpdateQuery<RegisterMutation, MeQuery>(\r\n          //       cache,\r\n          //       { query: MeDocument },\r\n          //       _result,\r\n          //       (result, query) => {\r\n          //         if (result.register.errors) {\r\n          //           return query;\r\n          //         } else {\r\n          //           return {\r\n          //             me: result.register.user,\r\n          //           };\r\n          //         }\r\n          //       }\r\n          //     );\r\n          //   },\r\n        },\r\n      },\r\n    }),\r\n    fetchExchange,\r\n  ],\r\n});\r\n","export default __webpack_public_path__ + \"static/media/Layout.2fe34322.less\";","import React, { useContext } from 'react';\r\nimport { Layout as AntdLayout } from 'antd';\r\nimport './Layout.less';\r\nimport { Breadcrumb, ConfirmationModal, Nav } from '../../components';\r\nimport moment from 'moment';\r\nimport { HomeOutlined, GithubOutlined, ReadOutlined } from '@ant-design/icons';\r\nimport ModalContext from '../../context/ModalContext/ModalContext';\r\n\r\nconst { Content, Footer } = AntdLayout;\r\n\r\ninterface Layout {}\r\n\r\nconst menus = [\r\n  // {\r\n  //   label: 'Home',\r\n  //   link: '/home',\r\n  //   icon: <HomeOutlined />,\r\n  // },\r\n  {\r\n    label: 'Repositories',\r\n    link: '/repositories',\r\n    icon: <GithubOutlined />,\r\n  },\r\n  {\r\n    label: 'Articles',\r\n    link: '/articles',\r\n    icon: <ReadOutlined />,\r\n  },\r\n];\r\n\r\nexport const Layout: React.FC = props => {\r\n  const modal: any = useContext(ModalContext);\r\n  return (\r\n    <AntdLayout>\r\n      <ConfirmationModal open={modal.open} {...modal.modalConfig} />\r\n      <Nav menus={menus} />\r\n      <Content\r\n        className=\"site-layout\"\r\n        style={{ padding: '0 50px', marginTop: 64 }}\r\n      >\r\n        <Breadcrumb menus={menus} />\r\n        <div\r\n          className=\"site-layout-background\"\r\n          style={{ padding: 24, minHeight: 380 }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>\r\n        &#169; {moment().format('YYYY')} CLIPNOTES\r\n      </Footer>\r\n    </AntdLayout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useMeQuery } from '../../generated/graphql';\r\nimport Layout from '../../hoc/Layout/Layout';\r\nimport { Loader } from '../../components';\r\n\r\ninterface ProtectedRouteProps {\r\n  component: any;\r\n  path: string;\r\n  exact: boolean;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({\r\n  component: Component,\r\n  path,\r\n}) => {\r\n  const [{ data, fetching }] = useMeQuery();\r\n\r\n  if (fetching) {\r\n    // * Return loader if request is processing\r\n    return <Loader />;\r\n  } else if (!data?.me) {\r\n    // * Redirect to login when user not logged in\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  // * Return high order component if user already logged-in\r\n  return (\r\n    <Layout>\r\n      <Route path={path} component={Component} />\r\n    </Layout>\r\n  );\r\n};\r\nexport default ProtectedRoute;\r\n","import React, { Suspense } from 'react';\r\nimport 'antd/dist/antd.less';\r\nimport Layout from '../hoc/Layout/Layout';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Login from '../pages/Login/Login';\r\nimport { createUrqlClient } from '../utils/createUrqlClient';\r\nimport { Provider } from 'urql';\r\nimport ProtectedRoute from '../components/ProtectedRoute/ProtectedRoute';\r\nimport { Loader } from '../components';\r\nimport { ModalProvider } from '../context/ModalContext/ModalContext';\r\nimport './App.less';\r\n// import Repositories from '../pages/Repositories/Repositories';\r\n\r\n// const Home = React.lazy(() => import('../pages/Home/Home'));\r\nconst Repositories = React.lazy(() =>\r\n  import('../pages/Repositories/Repositories')\r\n);\r\n\r\nconst Articles = React.lazy(() => import('../pages/Articles/Articles'));\r\nconst Bookmarks = React.lazy(() => import('../pages/Bookmarks/Bookmarks'));\r\nconst Profile = React.lazy(() => import('../pages/Profile/Profile'));\r\nconst Page404 = React.lazy(() => import('../pages/Page404/Page404'));\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <ModalProvider>\r\n        <Router basename={process.env.REACT_APP_BASENAME}>\r\n          <Provider value={createUrqlClient}>\r\n            <Switch>\r\n              <Route exact component={Login} path=\"/\" />\r\n              {/* <ProtectedRoute component={Home} path=\"/home\" /> */}\r\n              <ProtectedRoute\r\n                exact\r\n                component={Repositories}\r\n                path=\"/repositories\"\r\n              />\r\n              <ProtectedRoute exact component={Articles} path=\"/articles\" />\r\n              <ProtectedRoute exact component={Bookmarks} path=\"/bookmarks\" />\r\n              <ProtectedRoute exact component={Profile} path=\"/profile\" />\r\n              <Route component={Page404} />\r\n            </Switch>\r\n          </Provider>\r\n        </Router>\r\n      </ModalProvider>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/App.815544aa.less\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/override.e57a1696.less\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App/index';\nimport reportWebVitals from './reportWebVitals';\nimport './override.less';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport * as Urql from 'urql';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Article = {\n  __typename?: 'Article';\n  id: Scalars['Int'];\n  userId: Scalars['Int'];\n  idno: Scalars['String'];\n  href: Scalars['String'];\n  title: Scalars['String'];\n  description: Scalars['String'];\n  content: Scalars['String'];\n  comments_count: Scalars['String'];\n  public_reactions_count: Scalars['String'];\n  positive_reactions_count: Scalars['String'];\n  avatar: Scalars['String'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n};\n\nexport type Articles = {\n  __typename?: 'Articles';\n  articles?: Maybe<Array<Article>>;\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\nexport type Interest = {\n  __typename?: 'Interest';\n  id: Scalars['Int'];\n  userId: Scalars['Int'];\n  interest: Scalars['String'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  user: User;\n};\n\nexport type Language = {\n  __typename?: 'Language';\n  id: Scalars['Int'];\n  language: Scalars['String'];\n  value: Scalars['String'];\n  color: Scalars['String'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  user: User;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  register: UserResponse;\n  login: UserResponse;\n  patchProfile: UserResponse;\n  logout: Scalars['Boolean'];\n  postBookmark: Response;\n  deleteBookmark: Response;\n  postRepository: RepositoryResponse;\n  deleteRepository: Scalars['Boolean'];\n};\n\n\nexport type MutationRegisterArgs = {\n  options: InputRegistration;\n};\n\n\nexport type MutationLoginArgs = {\n  options: InputLogin;\n};\n\n\nexport type MutationPatchProfileArgs = {\n  options: InputPatchUser;\n};\n\n\nexport type MutationPostBookmarkArgs = {\n  input: InputBookmark;\n};\n\n\nexport type MutationDeleteBookmarkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type MutationPostRepositoryArgs = {\n  input: InputRepository;\n};\n\n\nexport type MutationDeleteRepositoryArgs = {\n  id: Scalars['Int'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  me?: Maybe<User>;\n  getUserArticles?: Maybe<Articles>;\n  getLanguages: Array<Language>;\n  getRepositories: Array<Repository>;\n};\n\nexport type Repository = {\n  __typename?: 'Repository';\n  id: Scalars['Int'];\n  userId: Scalars['Int'];\n  href: Scalars['String'];\n  title: Scalars['String'];\n  description: Scalars['String'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n};\n\nexport type RepositoryResponse = {\n  __typename?: 'RepositoryResponse';\n  code: Scalars['Float'];\n  message: Scalars['String'];\n  data: Repository;\n};\n\nexport type Response = {\n  __typename?: 'Response';\n  code: Scalars['Float'];\n  message: Scalars['String'];\n  data?: Maybe<Article>;\n};\n\nexport type User = {\n  __typename?: 'User';\n  id: Scalars['Int'];\n  email: Scalars['String'];\n  languageId?: Maybe<Scalars['Int']>;\n  first_name: Scalars['String'];\n  last_name: Scalars['String'];\n  avatar: Scalars['String'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  interests: Array<Interest>;\n  language?: Maybe<Language>;\n};\n\nexport type UserResponse = {\n  __typename?: 'UserResponse';\n  errors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\nexport type InputBookmark = {\n  href: Scalars['String'];\n  idno: Scalars['String'];\n  title: Scalars['String'];\n  description: Scalars['String'];\n  content: Scalars['String'];\n  comments_count: Scalars['Float'];\n  public_reactions_count: Scalars['Float'];\n  positive_reactions_count: Scalars['Float'];\n  avatar: Scalars['String'];\n};\n\nexport type InputLogin = {\n  tokenId: Scalars['String'];\n  email: Scalars['String'];\n};\n\nexport type InputPatchUser = {\n  email: Scalars['String'];\n  first_name: Scalars['String'];\n  last_name: Scalars['String'];\n  interests: Array<Scalars['String']>;\n  languageId: Scalars['Int'];\n};\n\nexport type InputRegistration = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n  email: Scalars['String'];\n  first_name: Scalars['String'];\n  last_name: Scalars['String'];\n};\n\nexport type InputRepository = {\n  title: Scalars['String'];\n  href: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ArticleFragment = (\n  { __typename?: 'Article' }\n  & Pick<Article, 'id' | 'href' | 'idno' | 'title' | 'description' | 'content' | 'comments_count' | 'public_reactions_count' | 'positive_reactions_count' | 'avatar'>\n);\n\nexport type InterestFragment = (\n  { __typename?: 'Interest' }\n  & Pick<Interest, 'id' | 'interest'>\n);\n\nexport type LanguageFragment = (\n  { __typename?: 'Language' }\n  & Pick<Language, 'id' | 'language' | 'color' | 'value'>\n);\n\nexport type RepositoryFragment = (\n  { __typename?: 'Repository' }\n  & Pick<Repository, 'id' | 'title' | 'description' | 'href'>\n);\n\nexport type ResponseFragment = (\n  { __typename?: 'Response' }\n  & Pick<Response, 'code' | 'message'>\n);\n\nexport type UserFragment = (\n  { __typename?: 'User' }\n  & Pick<User, 'id' | 'email' | 'first_name' | 'last_name' | 'avatar'>\n);\n\nexport type PostBookmarkMutationVariables = Exact<{\n  input: InputBookmark;\n}>;\n\n\nexport type PostBookmarkMutation = (\n  { __typename?: 'Mutation' }\n  & { postBookmark: (\n    { __typename?: 'Response' }\n    & Pick<Response, 'code' | 'message'>\n    & { data?: Maybe<(\n      { __typename?: 'Article' }\n      & ArticleFragment\n    )> }\n  ) }\n);\n\nexport type DeleteBookmarkMutationVariables = Exact<{\n  id: Scalars['Int'];\n}>;\n\n\nexport type DeleteBookmarkMutation = (\n  { __typename?: 'Mutation' }\n  & { deleteBookmark: (\n    { __typename?: 'Response' }\n    & Pick<Response, 'code' | 'message'>\n    & { data?: Maybe<(\n      { __typename?: 'Article' }\n      & ArticleFragment\n    )> }\n  ) }\n);\n\nexport type DeleteRepositoryMutationVariables = Exact<{\n  id: Scalars['Int'];\n}>;\n\n\nexport type DeleteRepositoryMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'deleteRepository'>\n);\n\nexport type LoginMutationVariables = Exact<{\n  options: InputLogin;\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'UserResponse' }\n    & { user?: Maybe<(\n      { __typename?: 'User' }\n      & { interests: Array<(\n        { __typename?: 'Interest' }\n        & InterestFragment\n      )> }\n      & UserFragment\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'FieldError' }\n      & Pick<FieldError, 'field' | 'message'>\n    )>> }\n  ) }\n);\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type PatchProfileMutationVariables = Exact<{\n  options: InputPatchUser;\n}>;\n\n\nexport type PatchProfileMutation = (\n  { __typename?: 'Mutation' }\n  & { patchProfile: (\n    { __typename?: 'UserResponse' }\n    & { user?: Maybe<(\n      { __typename?: 'User' }\n      & { interests: Array<(\n        { __typename?: 'Interest' }\n        & InterestFragment\n      )>, language?: Maybe<(\n        { __typename?: 'Language' }\n        & LanguageFragment\n      )> }\n      & UserFragment\n    )> }\n  ) }\n);\n\nexport type PostRepositoryMutationVariables = Exact<{\n  input: InputRepository;\n}>;\n\n\nexport type PostRepositoryMutation = (\n  { __typename?: 'Mutation' }\n  & { postRepository: (\n    { __typename?: 'RepositoryResponse' }\n    & Pick<RepositoryResponse, 'code' | 'message'>\n    & { data: (\n      { __typename?: 'Repository' }\n      & RepositoryFragment\n    ) }\n  ) }\n);\n\nexport type GetUserArticlesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetUserArticlesQuery = (\n  { __typename?: 'Query' }\n  & { getUserArticles?: Maybe<(\n    { __typename?: 'Articles' }\n    & { articles?: Maybe<Array<(\n      { __typename?: 'Article' }\n      & ArticleFragment\n    )>> }\n  )> }\n);\n\nexport type GetLanguageQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetLanguageQuery = (\n  { __typename?: 'Query' }\n  & { getLanguages: Array<(\n    { __typename?: 'Language' }\n    & LanguageFragment\n  )> }\n);\n\nexport type GetRepositoriesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetRepositoriesQuery = (\n  { __typename?: 'Query' }\n  & { getRepositories: Array<(\n    { __typename?: 'Repository' }\n    & RepositoryFragment\n  )> }\n);\n\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MeQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { interests: Array<(\n      { __typename?: 'Interest' }\n      & InterestFragment\n    )>, language?: Maybe<(\n      { __typename?: 'Language' }\n      & LanguageFragment\n    )> }\n    & UserFragment\n  )> }\n);\n\nexport const ArticleFragmentDoc = gql`\n    fragment Article on Article {\n  id\n  href\n  idno\n  title\n  description\n  content\n  comments_count\n  public_reactions_count\n  positive_reactions_count\n  avatar\n}\n    `;\nexport const InterestFragmentDoc = gql`\n    fragment Interest on Interest {\n  id\n  interest\n}\n    `;\nexport const LanguageFragmentDoc = gql`\n    fragment Language on Language {\n  id\n  language\n  color\n  value\n}\n    `;\nexport const RepositoryFragmentDoc = gql`\n    fragment Repository on Repository {\n  id\n  title\n  description\n  href\n}\n    `;\nexport const ResponseFragmentDoc = gql`\n    fragment Response on Response {\n  code\n  message\n}\n    `;\nexport const UserFragmentDoc = gql`\n    fragment User on User {\n  id\n  email\n  first_name\n  last_name\n  avatar\n}\n    `;\nexport const PostBookmarkDocument = gql`\n    mutation PostBookmark($input: inputBookmark!) {\n  postBookmark(input: $input) {\n    code\n    message\n    data {\n      ...Article\n    }\n  }\n}\n    ${ArticleFragmentDoc}`;\n\nexport const PostBookmarkComponent = (props: Omit<Urql.MutationProps<PostBookmarkMutation, PostBookmarkMutationVariables>, 'query'> & { variables?: PostBookmarkMutationVariables }) => (\n  <Urql.Mutation {...props} query={PostBookmarkDocument} />\n);\n\n\nexport function usePostBookmarkMutation() {\n  return Urql.useMutation<PostBookmarkMutation, PostBookmarkMutationVariables>(PostBookmarkDocument);\n};\nexport const DeleteBookmarkDocument = gql`\n    mutation DeleteBookmark($id: Int!) {\n  deleteBookmark(id: $id) {\n    code\n    message\n    data {\n      ...Article\n    }\n  }\n}\n    ${ArticleFragmentDoc}`;\n\nexport const DeleteBookmarkComponent = (props: Omit<Urql.MutationProps<DeleteBookmarkMutation, DeleteBookmarkMutationVariables>, 'query'> & { variables?: DeleteBookmarkMutationVariables }) => (\n  <Urql.Mutation {...props} query={DeleteBookmarkDocument} />\n);\n\n\nexport function useDeleteBookmarkMutation() {\n  return Urql.useMutation<DeleteBookmarkMutation, DeleteBookmarkMutationVariables>(DeleteBookmarkDocument);\n};\nexport const DeleteRepositoryDocument = gql`\n    mutation DeleteRepository($id: Int!) {\n  deleteRepository(id: $id)\n}\n    `;\n\nexport const DeleteRepositoryComponent = (props: Omit<Urql.MutationProps<DeleteRepositoryMutation, DeleteRepositoryMutationVariables>, 'query'> & { variables?: DeleteRepositoryMutationVariables }) => (\n  <Urql.Mutation {...props} query={DeleteRepositoryDocument} />\n);\n\n\nexport function useDeleteRepositoryMutation() {\n  return Urql.useMutation<DeleteRepositoryMutation, DeleteRepositoryMutationVariables>(DeleteRepositoryDocument);\n};\nexport const LoginDocument = gql`\n    mutation Login($options: inputLogin!) {\n  login(options: $options) {\n    user {\n      ...User\n      interests {\n        ...Interest\n      }\n    }\n    errors {\n      field\n      message\n    }\n  }\n}\n    ${UserFragmentDoc}\n${InterestFragmentDoc}`;\n\nexport const LoginComponent = (props: Omit<Urql.MutationProps<LoginMutation, LoginMutationVariables>, 'query'> & { variables?: LoginMutationVariables }) => (\n  <Urql.Mutation {...props} query={LoginDocument} />\n);\n\n\nexport function useLoginMutation() {\n  return Urql.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument);\n};\nexport const LogoutDocument = gql`\n    mutation Logout {\n  logout\n}\n    `;\n\nexport const LogoutComponent = (props: Omit<Urql.MutationProps<LogoutMutation, LogoutMutationVariables>, 'query'> & { variables?: LogoutMutationVariables }) => (\n  <Urql.Mutation {...props} query={LogoutDocument} />\n);\n\n\nexport function useLogoutMutation() {\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument);\n};\nexport const PatchProfileDocument = gql`\n    mutation PatchProfile($options: inputPatchUser!) {\n  patchProfile(options: $options) {\n    user {\n      ...User\n      interests {\n        ...Interest\n      }\n      language {\n        ...Language\n      }\n    }\n  }\n}\n    ${UserFragmentDoc}\n${InterestFragmentDoc}\n${LanguageFragmentDoc}`;\n\nexport const PatchProfileComponent = (props: Omit<Urql.MutationProps<PatchProfileMutation, PatchProfileMutationVariables>, 'query'> & { variables?: PatchProfileMutationVariables }) => (\n  <Urql.Mutation {...props} query={PatchProfileDocument} />\n);\n\n\nexport function usePatchProfileMutation() {\n  return Urql.useMutation<PatchProfileMutation, PatchProfileMutationVariables>(PatchProfileDocument);\n};\nexport const PostRepositoryDocument = gql`\n    mutation PostRepository($input: inputRepository!) {\n  postRepository(input: $input) {\n    code\n    message\n    data {\n      ...Repository\n    }\n  }\n}\n    ${RepositoryFragmentDoc}`;\n\nexport const PostRepositoryComponent = (props: Omit<Urql.MutationProps<PostRepositoryMutation, PostRepositoryMutationVariables>, 'query'> & { variables?: PostRepositoryMutationVariables }) => (\n  <Urql.Mutation {...props} query={PostRepositoryDocument} />\n);\n\n\nexport function usePostRepositoryMutation() {\n  return Urql.useMutation<PostRepositoryMutation, PostRepositoryMutationVariables>(PostRepositoryDocument);\n};\nexport const GetUserArticlesDocument = gql`\n    query GetUserArticles {\n  getUserArticles {\n    articles {\n      ...Article\n    }\n  }\n}\n    ${ArticleFragmentDoc}`;\n\nexport const GetUserArticlesComponent = (props: Omit<Urql.QueryProps<GetUserArticlesQuery, GetUserArticlesQueryVariables>, 'query'> & { variables?: GetUserArticlesQueryVariables }) => (\n  <Urql.Query {...props} query={GetUserArticlesDocument} />\n);\n\n\nexport function useGetUserArticlesQuery(options: Omit<Urql.UseQueryArgs<GetUserArticlesQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetUserArticlesQuery>({ query: GetUserArticlesDocument, ...options });\n};\nexport const GetLanguageDocument = gql`\n    query GetLanguage {\n  getLanguages {\n    ...Language\n  }\n}\n    ${LanguageFragmentDoc}`;\n\nexport const GetLanguageComponent = (props: Omit<Urql.QueryProps<GetLanguageQuery, GetLanguageQueryVariables>, 'query'> & { variables?: GetLanguageQueryVariables }) => (\n  <Urql.Query {...props} query={GetLanguageDocument} />\n);\n\n\nexport function useGetLanguageQuery(options: Omit<Urql.UseQueryArgs<GetLanguageQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetLanguageQuery>({ query: GetLanguageDocument, ...options });\n};\nexport const GetRepositoriesDocument = gql`\n    query GetRepositories {\n  getRepositories {\n    ...Repository\n  }\n}\n    ${RepositoryFragmentDoc}`;\n\nexport const GetRepositoriesComponent = (props: Omit<Urql.QueryProps<GetRepositoriesQuery, GetRepositoriesQueryVariables>, 'query'> & { variables?: GetRepositoriesQueryVariables }) => (\n  <Urql.Query {...props} query={GetRepositoriesDocument} />\n);\n\n\nexport function useGetRepositoriesQuery(options: Omit<Urql.UseQueryArgs<GetRepositoriesQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetRepositoriesQuery>({ query: GetRepositoriesDocument, ...options });\n};\nexport const MeDocument = gql`\n    query Me {\n  me {\n    ...User\n    interests {\n      ...Interest\n    }\n    language {\n      ...Language\n    }\n  }\n}\n    ${UserFragmentDoc}\n${InterestFragmentDoc}\n${LanguageFragmentDoc}`;\n\nexport const MeComponent = (props: Omit<Urql.QueryProps<MeQuery, MeQueryVariables>, 'query'> & { variables?: MeQueryVariables }) => (\n  <Urql.Query {...props} query={MeDocument} />\n);\n\n\nexport function useMeQuery(options: Omit<Urql.UseQueryArgs<MeQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<MeQuery>({ query: MeDocument, ...options });\n};","export default __webpack_public_path__ + \"static/media/Nav.c648b216.less\";","import React, { useState } from 'react';\r\nimport {\r\n  Menu,\r\n  Layout as AntdLayout,\r\n  Avatar,\r\n  Dropdown,\r\n  Popover,\r\n  Button,\r\n  Divider,\r\n} from 'antd';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport './Nav.less';\r\nimport {\r\n  LogoutOutlined,\r\n  UserOutlined,\r\n  SettingOutlined,\r\n  BookOutlined,\r\n  ProfileOutlined,\r\n} from '@ant-design/icons';\r\nimport { useLogoutMutation, useMeQuery } from '../../generated/graphql';\r\n\r\nconst { Header } = AntdLayout;\r\nconst { SubMenu } = Menu;\r\n\r\ninterface NavProps {\r\n  menus: any;\r\n}\r\n\r\nconst logoImg = `${process.env.REACT_APP_BASENAME}images/logo.png`;\r\nexport const Nav: React.FC<NavProps> = ({ menus, ...props }) => {\r\n  const location = useLocation();\r\n  const [open, setOpen] = useState(false);\r\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\r\n  const [{ data: meData, fetching: meQueryFetching }] = useMeQuery();\r\n\r\n  const onLogoutUser = async () => {\r\n    await logout();\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const onClickAvatar = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n      <div className=\"logo\">\r\n        <img src={logoImg} />\r\n        {/* <div>CLIPBOOK</div> */}\r\n      </div>\r\n      <Menu\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={\r\n          menus.some((menu: any) => menu.link === location.pathname)\r\n            ? menus[\r\n                menus.findIndex((menu: any) => menu.link === location.pathname)\r\n              ].label\r\n            : 'bookmarks'\r\n        }\r\n        {...(menus.findIndex((menu: any) => menu.link === location.pathname) >\r\n        -1\r\n          ? {\r\n              activeKey:\r\n                menus[\r\n                  menus.findIndex(\r\n                    (menu: any) => menu.link === location.pathname\r\n                  )\r\n                ].label,\r\n            }\r\n          : {})}\r\n      >\r\n        {menus.map((menu: any) => (\r\n          <Menu.Item key={menu.label} icon={menu.icon}>\r\n            <NavLink to={menu.link}>{menu.label}</NavLink>\r\n          </Menu.Item>\r\n        ))}\r\n        <SubMenu\r\n          key=\"SubMenu\"\r\n          icon={<UserOutlined />}\r\n          title={`${meData?.me?.first_name} ${meData?.me?.last_name}`}\r\n          style={{\r\n            float: 'right',\r\n          }}\r\n        >\r\n          <Menu.Item key=\"profile\">\r\n            <NavLink to=\"/profile\">\r\n              <ProfileOutlined /> My profile\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"bookmarks\">\r\n            <NavLink to=\"/bookmarks\">\r\n              <BookOutlined /> My bookmarks\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"setting:4\" onClick={() => onLogoutUser()}>\r\n            <LogoutOutlined /> Logout\r\n          </Menu.Item>\r\n        </SubMenu>\r\n\r\n        {/* <div\r\n          style={{\r\n            float: 'right',\r\n            // marginRight: '20px',\r\n          }}\r\n          // icon={<LogoutOutlined />}\r\n          // onClick={onLogoutUser}\r\n        >\r\n          <Popover\r\n            style={{ width: '250px' }}\r\n            content={\r\n              <div style={{ width: '150px' }}>\r\n                <NavLink to=\"/bookmarks\">\r\n                  <Button block type=\"text\">\r\n                    Bookmarks\r\n                  </Button>\r\n                </NavLink>\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <Button block type=\"text\">\r\n                  Logout\r\n                </Button>\r\n              </div>\r\n            }\r\n            // title=\"Title\"\r\n            trigger=\"click\"\r\n            placement=\"bottomRight\"\r\n            visible={open}\r\n            onVisibleChange={onClickAvatar}\r\n          >\r\n            <Button type=\"text\">\r\n              <Avatar icon={<UserOutlined />} />\r\n            </Button>\r\n          </Popover>\r\n        </div> */}\r\n        {/* <div style={{ textAlign: 'right' }}>\r\n        </div> */}\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Spin, Space } from 'antd';\r\nimport './Loader.less';\r\n\r\ninterface LoaderProps {\r\n  open?: boolean;\r\n}\r\n\r\nexport const Loader: React.FC<LoaderProps> = ({ open }) => {\r\n  return (\r\n    <div className=\"loader-overlay\">\r\n      <div className=\"loader-container\">\r\n        <Spin size=\"large\" />\r\n        <div>Loading...</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/Loader.4c64e4ec.less\";","import React from 'react';\r\nimport { Breadcrumb as AntdBreadcrumb } from 'antd';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ninterface BreadcrumbProps {\r\n  menus: Array<any>;\r\n}\r\n\r\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({ menus }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <AntdBreadcrumb style={{ margin: '16px 0' }}>\r\n      <AntdBreadcrumb.Item>\r\n        {/* <a href=\"/\">Home</a> */}\r\n        Home\r\n      </AntdBreadcrumb.Item>\r\n      {location.pathname !== '/' && (\r\n        <AntdBreadcrumb.Item>\r\n          <a href={location.pathname}>\r\n            {!menus.some((menu: any) => menu.link === location.pathname)\r\n              ? 'Bookmarks'\r\n              : menus.find(menu => menu.link === location.pathname).label}\r\n          </a>\r\n        </AntdBreadcrumb.Item>\r\n      )}\r\n    </AntdBreadcrumb>\r\n  );\r\n};\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport { List as AntdList, Space, Avatar, Button, Tag } from 'antd';\r\nimport {\r\n  MessageOutlined,\r\n  LikeOutlined,\r\n  StarOutlined,\r\n  BookOutlined,\r\n  DeleteOutlined,\r\n  GithubOutlined,\r\n} from '@ant-design/icons';\r\nimport './List.less';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Empty } from '../';\r\n\r\ninterface ListProps {\r\n  listData?: any;\r\n  onClickBookmark?: Function;\r\n  articles?: any;\r\n  onChangePage?: any;\r\n  total?: number | undefined;\r\n  onDeleteBookmark?: Function;\r\n  page?: number;\r\n}\r\n\r\n// const listData: Array<any> = [];\r\n// for (let i = 0; i < 23; i++) {\r\n//   listData.push({\r\n//     href: 'https://ant.design',\r\n//     title: `ant design part ${i}`,\r\n//     avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n//     description:\r\n//       'Ant Design, a design language for background applications, is refined by Ant UED Team.',\r\n//     content:\r\n//       'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\r\n//   });\r\n// }\r\n\r\nexport const List: React.FC<ListProps> = ({\r\n  listData,\r\n  onClickBookmark,\r\n  articles,\r\n  onChangePage,\r\n  total,\r\n  onDeleteBookmark,\r\n  page,\r\n}) => {\r\n  const location = useLocation();\r\n  const IconText = (iconProp: any) => (\r\n    <Space>\r\n      {React.createElement(iconProp.icon)}\r\n      {iconProp.text}\r\n    </Space>\r\n  );\r\n\r\n  return (\r\n    <AntdList\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      pagination={\r\n        total && total > 10\r\n          ? {\r\n              onChange: page => onChangePage(page),\r\n              pageSize: 10,\r\n              total: total ? total : 0,\r\n              current: page,\r\n            }\r\n          : false\r\n      }\r\n      locale={{\r\n        emptyText: (\r\n          <Empty\r\n            title=\"We can't found any data!\"\r\n            subtitle={\r\n              \"We can't found any articles/repositories that you bookmark.\"\r\n            }\r\n          />\r\n        ),\r\n      }}\r\n      dataSource={listData}\r\n      renderItem={(item: any) => {\r\n        return (\r\n          <AntdList.Item\r\n            key={item.id}\r\n            actions={[\r\n              <IconText\r\n                icon={StarOutlined}\r\n                text={item?.public_reactions_count || 0}\r\n                key=\"list-vertical-star-o\"\r\n              />,\r\n              <IconText\r\n                icon={LikeOutlined}\r\n                text={item?.positive_reactions_count || 0}\r\n                key=\"list-vertical-like-o\"\r\n              />,\r\n              <IconText\r\n                icon={MessageOutlined}\r\n                text={`${item.comments_count ? item.comments_count : 0}`}\r\n                key=\"list-vertical-message\"\r\n              />,\r\n              [\r\n                ...(item && item.tag_list\r\n                  ? item.tag_list.map((tag: any) => (\r\n                      <Tag color=\"geekblue-inverse\" key={tag}>\r\n                        {tag}\r\n                      </Tag>\r\n                    ))\r\n                  : []),\r\n              ],\r\n            ]}\r\n            extra={\r\n              location.pathname !== '/bookmarks' ? (\r\n                <Button\r\n                  type=\"link\"\r\n                  {...(articles &&\r\n                  articles.some((bookmark: any) => bookmark.idno == item.id)\r\n                    ? { className: 'btn-warning' }\r\n                    : {})}\r\n                  icon={<BookOutlined />}\r\n                  {...(onClickBookmark\r\n                    ? { onClick: () => onClickBookmark(item) }\r\n                    : {})}\r\n                >\r\n                  {articles &&\r\n                  articles.some((bookmark: any) => bookmark.idno == item.id)\r\n                    ? 'bookmarked'\r\n                    : 'bookmark'}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  type=\"link\"\r\n                  icon={<DeleteOutlined />}\r\n                  danger\r\n                  onClick={() => {\r\n                    if (onDeleteBookmark) onDeleteBookmark(item.id);\r\n                  }}\r\n                  // {...(onClickBookmark\r\n                  //   ? { onClick: () => onClickBookmark(item) }\r\n                  //   : {})}\r\n                />\r\n                // </Button>\r\n              )\r\n            }\r\n          >\r\n            <AntdList.Item.Meta\r\n              avatar={\r\n                item.avatar ? <Avatar src={item.avatar} /> : <GithubOutlined />\r\n              }\r\n              title={\r\n                <a href={item.href} target=\"_blank\">\r\n                  {item.title}\r\n                </a>\r\n              }\r\n              description={item.description}\r\n            />\r\n          </AntdList.Item>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default List;\r\n","export default __webpack_public_path__ + \"static/media/List.e87e726e.less\";","import React from 'react';\r\nimport { Modal as AntModal, Button, Space } from 'antd';\r\n\r\ninterface ModalProps {\r\n  toggleModal: Function;\r\n  onCancel: Function;\r\n  title?: string;\r\n  open: any;\r\n  content: string;\r\n}\r\n\r\nexport const Modal: React.FC<ModalProps> = ({\r\n  toggleModal,\r\n  onCancel,\r\n  title,\r\n  open,\r\n  content,\r\n}) => {\r\n  return (\r\n    <AntModal\r\n      {...(title ? { title: title } : {})}\r\n      visible={open}\r\n      onCancel={() => onCancel()}\r\n      footer={[\r\n        <Button onClick={() => toggleModal()} key=\"okay\">\r\n          OK\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <p>{content}</p>\r\n    </AntModal>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { Modal as AntdModal, Button, Space } from 'antd';\r\nimport {\r\n  ExclamationCircleOutlined,\r\n  CloseCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string;\r\n  content: string;\r\n  open: any;\r\n  onOkFunction: Function;\r\n  onCancelFunction: Function;\r\n}\r\n\r\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\r\n  title,\r\n  content,\r\n  open,\r\n  onOkFunction,\r\n  onCancelFunction,\r\n}) => {\r\n  //   const confirm = () => {\r\n  //     Modal.confirm({\r\n  //       title: title,\r\n  //       icon: <CloseCircleOutlined />,\r\n  //       content: 'Bla bla ...',\r\n  //       okText: 'Yes',\r\n  //       okType: 'danger',\r\n  //       onOk: () => onOkFunction(),\r\n  //       cancelText: 'Cancel',\r\n  //       onCancel: () => onCancelFunction()\r\n  //     });\r\n  //   };\r\n  // const thisFunc = () => {\r\n  //   console.log('this is onClick function...');\r\n  // };\r\n  return (\r\n    // <Space>\r\n    //   <Button onClick={() => confirm()}>Confirm</Button>\r\n    // </Space>\r\n    <AntdModal\r\n      {...(title ? { title: title } : {})}\r\n      visible={open}\r\n      onCancel={() => onCancelFunction()}\r\n      footer={[\r\n        <Button onClick={() => onCancelFunction()} key=\"cancel\">\r\n          Cancel\r\n        </Button>,\r\n        <Button onClick={() => onOkFunction()} key=\"okay\" danger>\r\n          Yes\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <p>{content}</p>\r\n    </AntdModal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","export default __webpack_public_path__ + \"static/media/Empty.81680f21.less\";","import React from 'react';\r\nimport './Empty.less';\r\nimport { Typography } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst emptyImg = `${process.env.REACT_APP_BASENAME}svgs/empty.svg`;\r\n\r\ninterface Empty {\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst Empty: React.FC<Empty> = ({ title, subtitle }) => {\r\n  console.log('this is the title', title);\r\n  return (\r\n    <div className=\"empty-data-container\">\r\n      <div className=\"emptyImg-container\">\r\n        <img src={emptyImg} />\r\n        <div className=\"empty-text\">\r\n          <Title level={5}>{title ? title : 'No data found!'}</Title>\r\n          <Text type=\"secondary\">\r\n            {subtitle\r\n              ? subtitle\r\n              : \"We can't found any articles that you bookmark.\"}\r\n          </Text>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Empty;\r\n"],"sourceRoot":""}